{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Static Web Server A blazing fast and asynchronous web server for static files-serving \u26a1 Overview \u00b6 Static Web Server (or SWS abbreviated) is a very small and fast production-ready web server suitable to serve static web files or assets. It is focused on lightness and easy to use principles but keeping high performance and safety powered by The Rust Programming Language . Written on top of Hyper and Tokio runtime. It provides concurrent and asynchronous networking abilities as well as the latest HTTP/1 - HTTP/2 implementations. It's cross-platform and available for Linux , macOS , Windows and FreeBSD ( x86 / x86_64 , ARM / ARM64 ) as well as Docker . Tips If you're looking for v1 please go to 1.x branch. If you want to migrate from v1 to v2 please take a look at v2.0.0 release. Features \u00b6 Built with Rust which is focused on safety, speed and concurrency . Memory safe and very reduced CPU and RAM overhead. Blazing fast static files-serving and asynchronous powered by latest Hyper , Tokio and a set of awesome crates . Single 4MB (uncompressed) and fully static binary with no dependencies ( Musl libc ). Suitable for running on any Linux distro or Docker container . Optional GZip, Deflate or Brotli compression for text-based web files only. Compression on demand via Accept-Encoding header. Partial Content Delivery support for byte-serving of large files. Optional Cache Control headers for assets. HEAD responses. Lightweight and configurable logging via tracing crate. Termination signal handling. HTTP/2 + TLS support. Security headers for HTTP/2 by default. Customizable number of worker threads. Optional directory listing. CORS support. Basic HTTP Authentication. Default and custom error pages. Configurable using CLI arguments or environment variables. First-class Docker support. Scratch and latest Alpine Linux Docker images available. Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Cross-platform. Binaries available for Linux, macOS, Windows & FreeBSD x86_64 / ARM.","title":"Overview"},{"location":"#overview","text":"Static Web Server (or SWS abbreviated) is a very small and fast production-ready web server suitable to serve static web files or assets. It is focused on lightness and easy to use principles but keeping high performance and safety powered by The Rust Programming Language . Written on top of Hyper and Tokio runtime. It provides concurrent and asynchronous networking abilities as well as the latest HTTP/1 - HTTP/2 implementations. It's cross-platform and available for Linux , macOS , Windows and FreeBSD ( x86 / x86_64 , ARM / ARM64 ) as well as Docker . Tips If you're looking for v1 please go to 1.x branch. If you want to migrate from v1 to v2 please take a look at v2.0.0 release.","title":"Overview"},{"location":"#features","text":"Built with Rust which is focused on safety, speed and concurrency . Memory safe and very reduced CPU and RAM overhead. Blazing fast static files-serving and asynchronous powered by latest Hyper , Tokio and a set of awesome crates . Single 4MB (uncompressed) and fully static binary with no dependencies ( Musl libc ). Suitable for running on any Linux distro or Docker container . Optional GZip, Deflate or Brotli compression for text-based web files only. Compression on demand via Accept-Encoding header. Partial Content Delivery support for byte-serving of large files. Optional Cache Control headers for assets. HEAD responses. Lightweight and configurable logging via tracing crate. Termination signal handling. HTTP/2 + TLS support. Security headers for HTTP/2 by default. Customizable number of worker threads. Optional directory listing. CORS support. Basic HTTP Authentication. Default and custom error pages. Configurable using CLI arguments or environment variables. First-class Docker support. Scratch and latest Alpine Linux Docker images available. Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Cross-platform. Binaries available for Linux, macOS, Windows & FreeBSD x86_64 / ARM.","title":"Features"},{"location":"changelog-v1/","text":"Static Web Server v1 - Changelog \u00b6 All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Note: See changelog for v2 under the master branch. v1.18.0 - 2021-08-20 \u00b6 Updates 806a276 Update dependencies including OpenSSL, httparse and related crates. Refactorings c9e7222 Cross-platform ctrl-c signal handling including Windows support. 3c7d9f6 Remove needless borrow on server module. Docs 5a14787 Changelog support for v1. PR #50 v1.17.1 - 2021-06-30 \u00b6 Fixes f976586 Fix static file base path not resolved (canonicalized) properly. For example when uri paths map to symlinks on file system. 35d5a1e Fix missing server version env of \"scratch\" Dockerfile. Updates 1fc9d7f Update dependencies 30.06.2021. Docs 8979292 Describe current supported targets. Refactorings 34cd35b Minor config project updates. v1.17.0 - 2021-06-21 \u00b6 Updates 54ae2d9 Update dependencies which includes OpenSSL crate updates and others (also 299e01c ). Features f78de5a Additionally to current three targets x86_64-unknown-linux-musl , x86_64-apple-darwin , x86_64-pc-windows-msvc . We are supporting six ones more, among which five ARMs stand out: x86_64-unknown-linux-gnu aarch64-apple-darwin aarch64-pc-windows-msvc aarch64-unknown-linux-gnu aarch64-unknown-linux-musl arm-unknown-linux-gnueabihf Find those targets attached to this release. Refactorings bf87d7f Improve error messages for address binding errors. PR #43 842be1d Update Docker files in order to get the new Linux binary source. Note about releases Rust Nightly is powering the releases from now on the CI. This makes possible to reach more targets in the future. For more details about it see Rust Nightly targets supported . However clarify that the static-web-server project is not using any nightly feature but only stable Rust ones and also the project is tested against nightly and stable Rust on CI recurrently in order to be notified in case of \"regressions or bugs introduced in Nightly Rust\" . However it is known that the nightly compiler is very stable therefore the reason why we have chosen it for release targets via CI like many other popular Rust projects. In any case, don't hesitate to file an issue. v1.16.0 - 2021-05-26 \u00b6 Updates b0593ff Binaries compiled with latest Rust 1.52.1 release. c96cd48 Update dependencies 26.05.2021 v1.15.0 - 2021-04-20 \u00b6 Features 8cf7909 Binaries compiled with latest Rust 1.51.0 release. cfbffb8 Alpine 3.13 Docker image. Updates 12824ed Update dependencies 20.04.2021 (also 996c181 , c383b8a ). Upgrades also include a OpenSSL security upgrade to 1.1.1k which fixes CVE-2021-3450 . More details on https://www.openssl.org/news/secadv/20210325.txt Docs 304288c Minor README clarifications. v1.14.0 - 2021-02-14 \u00b6 Features 252406d Binaries compiled with latest Rust v1.50.0 release. feac82e Directory listing support via new -i, --directory-listing boolean flag (equivalent SERVER_DIRECTORY_LISTING env variable) which is disabled by default. PR #32 resolves #31 . 5026bfe Windows x86_64 binary support (.exe). See binary file attached to this release. PR #33 resolves #29 . 116cbbf UTF-8 URL decoding support (also cfcb6c for directory listing) Refactorings 4fe89c5 Trim CORS comma-separated allowed hosts (CORS server argument). 8733d2a Simplify public example asset files. 1c1c2af Better 4xx/50x status code checks and more concise default error page content. db51d77 Option type used for certain server arguments. 6551018 Static file middleware searching optimizations which increases web server performance. a6cca08 Improved static file path resolving. 5fed730 Improved error handling on directory listing feature. d5e6bdd Improve error handling on static files module. b167030 Optimize few dependencies features which reduces binary size. dd59cd3 Explicit OS target for signals handling (just Unix-like & Windows distinction) Updates a664866 Update dependencies 14.02.2021 Codebase 533006f Refactor project modules structure & incorporate the static file middleware into the project. Docs 6887624 Remove whitespace description for CORS option. v1.13.0 - 2021-01-24 \u00b6 Updates 300337e Update dependencies 24.01.2021 (also a72b31d ) Features Github Sponsor support . Consider to support this project via Github Sponsor or Paypal paypal.me/joseluisqs . 63a05fa HTTP to HTTPS redirection support. PR #26 resolves #25 by @HenningHolmDE . See README file for more details. 77b07be CLI argument aliases for some options. See README file for more details. Refactorings 61d819d Minor server log info tweaks. d595219 Prefer &[] instead of Vec ptr as arg type for on_server_running function. Codebase f3008f3 Github Actions as new CI. v1.12.0 - 2021-01-02 \u00b6 Updates c3583f3 Binaries compiled with latest Rust v1.49.0 release. 2732bd3 Update dependencies 02.01.2021 (also acef399 , a7b3f40 ) Bug fixes c3583f3 Server error response during large file downloads (Macos/Linux). Issue #24 reported by @lukasa1993 . The Rust 1.49.0 upgrade solves the issue which was published on 1.48.0 Features 62c8fc2 Alpine 1.12 Docker image. Darwin Binary compiled on Mac OS X SDK 10.15 with a minimum 10.14 version. joseluisq/rust-linux-darwin-builder@v1.49.0 Binary sizes Linux: Static binary size has no changed ( 4.8M ) on current version v1.12.0 . Darwin: Dynamic binary size was decreased ( 0.1M ). From 1.7M ( v1.11.0 ) to 1.6M (current version v1.12.0 ) Codebase 7581c99 Ignore some project directories. v1.11.0 - 2020-10-15 \u00b6 Updates d4e32ca Binaries compiled with latest Rust v1.47.0 release. dd20c3e Update dependencies 15.10.2020 (also d4e32ca , c4db7c6 ) Improvements 6d3dc45 Shrink Darwin binary size. 2401b24 Include a SERVER_VERSION (server release version) env on every Docker image (also ee47f76 , 74040cf ). Binary sizes Linux: Static binary size was increased ( 0.5M ). From 4.3M ( v1.10.0 ) to 4.8M (current version v1.11.0 ) Darwin: Dynamic binary size was decreased ( 0.4M ). From 2.1M ( v1.10.0 ) to 1.7M (current version v1.11.0 ) Codebase cbe1783 Automate Docker images versioning with Drone pipelines. v1.10.0 - 2020-07-07 \u00b6 Updates ff2f2ba Binaries compiled with latest Rust v1.44.1 release. 9732d47 Update dependencies 07.07.2020 (also eb30e11 ) Improvements 93aecf2 Use jemalloc as global allocator on Linux Musl 64-bit systems. Which increases the web server performance (also 0fda53f ). See more details on PR #22 . Linux binary size Static binary size was increased ( 0.2M ). From 4.1M ( v1.9.2 ) to 4.3M (current version v1.10.0 ) Codebase 8e5a3c7 Refactor project dev structure. v1.9.2 - 2020-06-08 \u00b6 Bugfixes 034263e Fix regression introduced by commit c0d2891 which displays wrong content type text/plain instead of text/html for 404/50x error pages. v1.9.1 - 2020-06-08 \u00b6 Updates d87dafd Binaries compiled with latest Rust v1.43.1 release. 0d7038f Update dependencies 08.06.20 (also 044b4a9 ) Improvements Update iron-staticfile-middleware to v0.4.2 which increases slightly performance on every check of text-based mime types array. Refactors c0d2891 Prefer const for the default content type on Error Page middeware. c3a7d73 Minor syntax improvements on the Gzip middeware and the Staticfile handler. f7564f6 Remove unnecessary to_string conversion on server address. 23a6a15 Remove git tag latest of release tag target. v1.9.0 - 2020-05-09 \u00b6 Features Binaries compiled with latest Rust v1.43.0 and OpenSSL v1.1.1g . More details on rust-linux-darwin-builder release. b2d2f40 Partial Content Delivery support. Which allows to serve bytes of large files. Resolves #15 . 1af7d28 CORS support via --cors-allow-origins option and its equivalent env. Resolves #18 . ed94c4b Enable Gzip compression only for known text-based file types. View file content types on issue #19 . 77bf538 Update dependencies 10.05.2020 (also b2d2f40 , 7a0fed0 ) Linux binary size Static binary size was increased ( 0.1M ). From 4.0M ( v1.8.0 ) to 4.1M (current version v1.9.0 ) Documentation e37d513 Corresponding documentation updates reflecting changes and features. Codebase 1b1174d Prefer const over static on default error page content. 4bda5f3 Simplify Gzip middleware. 9a109d7 Staging CI pipeline. v1.8.0 - 2020-04-21 \u00b6 Overview This minor release v1.8.0 introduces the following: assets directory path configurable and independent (no more relative to the root ). This contains a \"breaking change\" . (Please see below). assets directory route is always the directory name. That means if you have /public/my-assets then the route will be /my-assets . New option for configurable logging levels. error log level by default. (More details below). Reply with an empty response body on HEAD requests. Skip Gzip compression on HEAD requests. root and assets directory paths checking before to start the server. Improve logging server information. Please view the details involved about this minor release. Features 2f7d042 - Configurable assets directory. (minor breaking change). 0dd2abe - Configurable logging levels (resolves #16 ) via --log-level option or its equivalent env. Now error log level is enabled by default. Use info level if you want requests details. Check out the documentation for more options. 0a9f66b - Update iron_staticfile_middleware to v0.3.0 . 925c58a - Update dependencies (April 21th 2020). Breaking change This minor release contains one \"breaking change\" due to the feature \"configurable assets directory\" ( 2f7d042 ). 1. Configurable assets directory This feature makes assets directory ( --assets option and its equivalent SERVER_ASSETS env) configurable and independent. It means that assets directory is no more restricted to be relative to root directory. So absolute paths work now. 1.1. Caveat and solution for relative assets directory If you are using an assets directory path relative to root ( v1.7.0 or early). For example if you have a root ./my-root and assets ./my-assets directories. Just adjust your assets directory path to ./my-root/my-assets or use another absolute path if you want. This is necessary because from now, the assets directory is treated as an independent path. So an absolute path is recomendable for both directories (root and assets). Otherwise, if you are using the default values provided by the server, you don't need to modify anything. Unless you had specified them yourself. If so, please proceed as explained above. Refactorings 59777d7 - Empty response body on HEAD requests (also 07bf49b). 57184a5 - Skip Gzip compression on HEAD requests. e40016d - Root and assets directory paths checking. 597fa97 - Improve logging server information. Documentation New options and modifications details were updated, please take a look the documentation on README file. 8a5cf79 - Clarify assets default option value. 0767071 - Docker stack notes about assets directory functionality. Codebase a449eb3 - Refactor path helpers implementation. 2e2a6ac - Simplify error page implementation. ff4ec6e - Static file unit test cases. 48b92ef - Skip files of Docker build context. v1.7.0 - 2020-04-04 \u00b6 Features 052c18d Binaries compiled with latest Rust v1.42.0 4ae5b1a Update dependencies (April 4 th 2020) Linux binary size Static binary size was increased ( 0.1M ). From 3.9M ( v1.6.0 ) to 4.0M (current version v1.7.0 ) Codebase - 18a6cd5 - Simplify makefile build tagets. Includes checksum task (also 1c3abdf ) - Among other project structural improvements v1.6.0 - 2020-03-04 \u00b6 Features d0e7a7f Binaries compiled with latest Rust v1.41.1 . a2a4e98 Signals termination support. View feature issue #13 resolved by PR #14 . 08d5847 Docker Alpine image upgraded to latest v3.11 . 20b9fd2 Docker entrypoint shell script for Alpine image. It gives the ability to pass flag arguments on a docker run execution or via the command option in a docker-compose file. Example: docker run --rm static-web-server:alpine --help . Flag arguments (with dashes) will be passed to static-web-server , otherwise they will be treated as shell commands. Example of an interactive run: docker run --rm -it static-web-server:alpine sh . 881f37c Dependency updates 03.03.2020. (also a96e031 , c0e96e8 ) Linux binary size Static binary size was reduced ( 0.3M ). From 4.2M ( v1.5.0 ) to 3.9M (current version v1.6.0 ) Codebase bac3914 openssl as dev-dependency vendored. 27dd9ff Update makefile cross-compiling tasks using rust-linux-darwin-builder (also 38808fb ). 478d100 Rename Docker file templates. (also ba105e4 ) 2adc5db Relocate Docker templates version script. 34e0c59 Minor documentation updates. v1.5.0 - 2020-02-02 \u00b6 Features 6dc5056 Feat: gzip compression on demand via accept-encoding header (PR #12 resolves #10 ). eaebf82 Feat: Update dependencies Feb 02, 2020. It also resolves #11 head request method feature. v1.4.0 - 2020-01-15 \u00b6 Features d195e74 Feat: Add TLS/SSL support (PR #9 resolves #2 ). Introducing three new options such as --tls , --tls-pkcs12 and --tls-pkcs12-passwd as well as their corresponding environment variables. 63f2c82 Docs: Add TLS/SSL section. View usage on readme file. 9c58c9c Feat: Update to latest dependencies Jun 15, 2020. Due TLS/SSL feature the Linux binary size has incremented ( 2,3MB ) from 1.8MB to 4.1MB . Misc cf0fb53 Docs: Update new options usage in readme file a7d55ad Fix: Permissions for Rust project directory 86f8d8a Feat: Add more sections to Cargo manifest file v1.3.0 - 2020-01-07 \u00b6 Features 9179bc3 Add binary support for Macos x86_64-apple-darwin thanks to Rust Linux / Darwin Builder . Resolves issue #8 . 1509f5f Update dependencies Jan 7, 2020 Misc 92b04e1 Add Linux and Darwin makefile tasks a7a6d61 Fix tarball and shrinking makefile tasks 56c425a Remove Github release step from Drone pipeline v1.2.0 - 2019-12-26 \u00b6 Features 2979f7a Makes optional the error pages feature introducing default response HTML messages for 400 and 50x errors. (PR #7 resolves #6 ) Refactors 8a90486 Update pages and assets example 3e64cbb Update server config information Misc 593ca98 Minor documentation updates 9f63108 Disable Travis CI email notifications v1.1.0 - 2019-12-25 \u00b6 Features Rust v1.40.0 ( 73528e3 2019-12-16) CLI options support. PR #4 by @dlalic resolves #1 . See README file for more details. Error pages support. PR #5 resolves #3 . See README file for more details. Binary size increment ( 0.4MB ) from 1.4MB to 1.8MB . Breaking changes Due error HTML pages feature #5 now the server requires two settings for display 404 and 50x errors. For example if you use environment variables try to append following variables with the two paths of your HTML pages: # HTML file path for 404 errors SERVER_ERROR_PAGE_404 = ./public/404.html # HTML file path for 50x errors SERVER_ERROR_PAGE_50X = ./public/50x.html Or via CLI options: --page404 <page404> HTML file path for 404 errors [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] Refactors - 112a1f3 Update dockefile templates metadata - b34624c Dependency updates - 5e9abd4 Apply cargo fix --edition to entire project - 4712b9c Minor tweaks for Cargo make tasks - 6fb65b2 Rename env.rs to config.rs . - New updated fork dependency iron-staticfile-middleware - Minor project code base improvements v1.0.0 - 2019-11-28 \u00b6 This is the first major release Features Rust v1.39.0 ( 4560ea788 2019-11-04) Binary size reduction for this current release from 1.6MB to 1.4MB . v1.0.0-beta.4 - 2019-11-28 \u00b6 Updates eb96054 Refactor project structure eb96054 Update dependencies eb96054 Support for latest Rust v1.39.0 ( [4560ea7](https://github.com/joseluisq/static-web-server/commit/4560ea7) 2019-11-04) Deployment 2fd780e Fix Cargo package config file name and version extraction 3a69088 Fix release tarball files generation Misc Binary size reduction for this current release from 1.6M to 1.4M . v1.0.0-beta.3 - 2019-10-10 \u00b6 Features Add Rust v1.38.0 ( 625451e 2019-09-23) compiling support. v1.0.0-beta.2 - 2019-09-05 \u00b6","title":"Changelog v1"},{"location":"changelog-v1/#static-web-server-v1-changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Note: See changelog for v2 under the master branch.","title":"Static Web Server v1 - Changelog"},{"location":"changelog-v1/#v1180-2021-08-20","text":"Updates 806a276 Update dependencies including OpenSSL, httparse and related crates. Refactorings c9e7222 Cross-platform ctrl-c signal handling including Windows support. 3c7d9f6 Remove needless borrow on server module. Docs 5a14787 Changelog support for v1. PR #50","title":"v1.18.0 - 2021-08-20"},{"location":"changelog-v1/#v1171-2021-06-30","text":"Fixes f976586 Fix static file base path not resolved (canonicalized) properly. For example when uri paths map to symlinks on file system. 35d5a1e Fix missing server version env of \"scratch\" Dockerfile. Updates 1fc9d7f Update dependencies 30.06.2021. Docs 8979292 Describe current supported targets. Refactorings 34cd35b Minor config project updates.","title":"v1.17.1 - 2021-06-30"},{"location":"changelog-v1/#v1170-2021-06-21","text":"Updates 54ae2d9 Update dependencies which includes OpenSSL crate updates and others (also 299e01c ). Features f78de5a Additionally to current three targets x86_64-unknown-linux-musl , x86_64-apple-darwin , x86_64-pc-windows-msvc . We are supporting six ones more, among which five ARMs stand out: x86_64-unknown-linux-gnu aarch64-apple-darwin aarch64-pc-windows-msvc aarch64-unknown-linux-gnu aarch64-unknown-linux-musl arm-unknown-linux-gnueabihf Find those targets attached to this release. Refactorings bf87d7f Improve error messages for address binding errors. PR #43 842be1d Update Docker files in order to get the new Linux binary source. Note about releases Rust Nightly is powering the releases from now on the CI. This makes possible to reach more targets in the future. For more details about it see Rust Nightly targets supported . However clarify that the static-web-server project is not using any nightly feature but only stable Rust ones and also the project is tested against nightly and stable Rust on CI recurrently in order to be notified in case of \"regressions or bugs introduced in Nightly Rust\" . However it is known that the nightly compiler is very stable therefore the reason why we have chosen it for release targets via CI like many other popular Rust projects. In any case, don't hesitate to file an issue.","title":"v1.17.0 - 2021-06-21"},{"location":"changelog-v1/#v1160-2021-05-26","text":"Updates b0593ff Binaries compiled with latest Rust 1.52.1 release. c96cd48 Update dependencies 26.05.2021","title":"v1.16.0 - 2021-05-26"},{"location":"changelog-v1/#v1150-2021-04-20","text":"Features 8cf7909 Binaries compiled with latest Rust 1.51.0 release. cfbffb8 Alpine 3.13 Docker image. Updates 12824ed Update dependencies 20.04.2021 (also 996c181 , c383b8a ). Upgrades also include a OpenSSL security upgrade to 1.1.1k which fixes CVE-2021-3450 . More details on https://www.openssl.org/news/secadv/20210325.txt Docs 304288c Minor README clarifications.","title":"v1.15.0 - 2021-04-20"},{"location":"changelog-v1/#v1140-2021-02-14","text":"Features 252406d Binaries compiled with latest Rust v1.50.0 release. feac82e Directory listing support via new -i, --directory-listing boolean flag (equivalent SERVER_DIRECTORY_LISTING env variable) which is disabled by default. PR #32 resolves #31 . 5026bfe Windows x86_64 binary support (.exe). See binary file attached to this release. PR #33 resolves #29 . 116cbbf UTF-8 URL decoding support (also cfcb6c for directory listing) Refactorings 4fe89c5 Trim CORS comma-separated allowed hosts (CORS server argument). 8733d2a Simplify public example asset files. 1c1c2af Better 4xx/50x status code checks and more concise default error page content. db51d77 Option type used for certain server arguments. 6551018 Static file middleware searching optimizations which increases web server performance. a6cca08 Improved static file path resolving. 5fed730 Improved error handling on directory listing feature. d5e6bdd Improve error handling on static files module. b167030 Optimize few dependencies features which reduces binary size. dd59cd3 Explicit OS target for signals handling (just Unix-like & Windows distinction) Updates a664866 Update dependencies 14.02.2021 Codebase 533006f Refactor project modules structure & incorporate the static file middleware into the project. Docs 6887624 Remove whitespace description for CORS option.","title":"v1.14.0 - 2021-02-14"},{"location":"changelog-v1/#v1130-2021-01-24","text":"Updates 300337e Update dependencies 24.01.2021 (also a72b31d ) Features Github Sponsor support . Consider to support this project via Github Sponsor or Paypal paypal.me/joseluisqs . 63a05fa HTTP to HTTPS redirection support. PR #26 resolves #25 by @HenningHolmDE . See README file for more details. 77b07be CLI argument aliases for some options. See README file for more details. Refactorings 61d819d Minor server log info tweaks. d595219 Prefer &[] instead of Vec ptr as arg type for on_server_running function. Codebase f3008f3 Github Actions as new CI.","title":"v1.13.0 - 2021-01-24"},{"location":"changelog-v1/#v1120-2021-01-02","text":"Updates c3583f3 Binaries compiled with latest Rust v1.49.0 release. 2732bd3 Update dependencies 02.01.2021 (also acef399 , a7b3f40 ) Bug fixes c3583f3 Server error response during large file downloads (Macos/Linux). Issue #24 reported by @lukasa1993 . The Rust 1.49.0 upgrade solves the issue which was published on 1.48.0 Features 62c8fc2 Alpine 1.12 Docker image. Darwin Binary compiled on Mac OS X SDK 10.15 with a minimum 10.14 version. joseluisq/rust-linux-darwin-builder@v1.49.0 Binary sizes Linux: Static binary size has no changed ( 4.8M ) on current version v1.12.0 . Darwin: Dynamic binary size was decreased ( 0.1M ). From 1.7M ( v1.11.0 ) to 1.6M (current version v1.12.0 ) Codebase 7581c99 Ignore some project directories.","title":"v1.12.0 - 2021-01-02"},{"location":"changelog-v1/#v1110-2020-10-15","text":"Updates d4e32ca Binaries compiled with latest Rust v1.47.0 release. dd20c3e Update dependencies 15.10.2020 (also d4e32ca , c4db7c6 ) Improvements 6d3dc45 Shrink Darwin binary size. 2401b24 Include a SERVER_VERSION (server release version) env on every Docker image (also ee47f76 , 74040cf ). Binary sizes Linux: Static binary size was increased ( 0.5M ). From 4.3M ( v1.10.0 ) to 4.8M (current version v1.11.0 ) Darwin: Dynamic binary size was decreased ( 0.4M ). From 2.1M ( v1.10.0 ) to 1.7M (current version v1.11.0 ) Codebase cbe1783 Automate Docker images versioning with Drone pipelines.","title":"v1.11.0 - 2020-10-15"},{"location":"changelog-v1/#v1100-2020-07-07","text":"Updates ff2f2ba Binaries compiled with latest Rust v1.44.1 release. 9732d47 Update dependencies 07.07.2020 (also eb30e11 ) Improvements 93aecf2 Use jemalloc as global allocator on Linux Musl 64-bit systems. Which increases the web server performance (also 0fda53f ). See more details on PR #22 . Linux binary size Static binary size was increased ( 0.2M ). From 4.1M ( v1.9.2 ) to 4.3M (current version v1.10.0 ) Codebase 8e5a3c7 Refactor project dev structure.","title":"v1.10.0 - 2020-07-07"},{"location":"changelog-v1/#v192-2020-06-08","text":"Bugfixes 034263e Fix regression introduced by commit c0d2891 which displays wrong content type text/plain instead of text/html for 404/50x error pages.","title":"v1.9.2 - 2020-06-08"},{"location":"changelog-v1/#v191-2020-06-08","text":"Updates d87dafd Binaries compiled with latest Rust v1.43.1 release. 0d7038f Update dependencies 08.06.20 (also 044b4a9 ) Improvements Update iron-staticfile-middleware to v0.4.2 which increases slightly performance on every check of text-based mime types array. Refactors c0d2891 Prefer const for the default content type on Error Page middeware. c3a7d73 Minor syntax improvements on the Gzip middeware and the Staticfile handler. f7564f6 Remove unnecessary to_string conversion on server address. 23a6a15 Remove git tag latest of release tag target.","title":"v1.9.1 - 2020-06-08"},{"location":"changelog-v1/#v190-2020-05-09","text":"Features Binaries compiled with latest Rust v1.43.0 and OpenSSL v1.1.1g . More details on rust-linux-darwin-builder release. b2d2f40 Partial Content Delivery support. Which allows to serve bytes of large files. Resolves #15 . 1af7d28 CORS support via --cors-allow-origins option and its equivalent env. Resolves #18 . ed94c4b Enable Gzip compression only for known text-based file types. View file content types on issue #19 . 77bf538 Update dependencies 10.05.2020 (also b2d2f40 , 7a0fed0 ) Linux binary size Static binary size was increased ( 0.1M ). From 4.0M ( v1.8.0 ) to 4.1M (current version v1.9.0 ) Documentation e37d513 Corresponding documentation updates reflecting changes and features. Codebase 1b1174d Prefer const over static on default error page content. 4bda5f3 Simplify Gzip middleware. 9a109d7 Staging CI pipeline.","title":"v1.9.0 - 2020-05-09"},{"location":"changelog-v1/#v180-2020-04-21","text":"Overview This minor release v1.8.0 introduces the following: assets directory path configurable and independent (no more relative to the root ). This contains a \"breaking change\" . (Please see below). assets directory route is always the directory name. That means if you have /public/my-assets then the route will be /my-assets . New option for configurable logging levels. error log level by default. (More details below). Reply with an empty response body on HEAD requests. Skip Gzip compression on HEAD requests. root and assets directory paths checking before to start the server. Improve logging server information. Please view the details involved about this minor release. Features 2f7d042 - Configurable assets directory. (minor breaking change). 0dd2abe - Configurable logging levels (resolves #16 ) via --log-level option or its equivalent env. Now error log level is enabled by default. Use info level if you want requests details. Check out the documentation for more options. 0a9f66b - Update iron_staticfile_middleware to v0.3.0 . 925c58a - Update dependencies (April 21th 2020). Breaking change This minor release contains one \"breaking change\" due to the feature \"configurable assets directory\" ( 2f7d042 ). 1. Configurable assets directory This feature makes assets directory ( --assets option and its equivalent SERVER_ASSETS env) configurable and independent. It means that assets directory is no more restricted to be relative to root directory. So absolute paths work now. 1.1. Caveat and solution for relative assets directory If you are using an assets directory path relative to root ( v1.7.0 or early). For example if you have a root ./my-root and assets ./my-assets directories. Just adjust your assets directory path to ./my-root/my-assets or use another absolute path if you want. This is necessary because from now, the assets directory is treated as an independent path. So an absolute path is recomendable for both directories (root and assets). Otherwise, if you are using the default values provided by the server, you don't need to modify anything. Unless you had specified them yourself. If so, please proceed as explained above. Refactorings 59777d7 - Empty response body on HEAD requests (also 07bf49b). 57184a5 - Skip Gzip compression on HEAD requests. e40016d - Root and assets directory paths checking. 597fa97 - Improve logging server information. Documentation New options and modifications details were updated, please take a look the documentation on README file. 8a5cf79 - Clarify assets default option value. 0767071 - Docker stack notes about assets directory functionality. Codebase a449eb3 - Refactor path helpers implementation. 2e2a6ac - Simplify error page implementation. ff4ec6e - Static file unit test cases. 48b92ef - Skip files of Docker build context.","title":"v1.8.0 - 2020-04-21"},{"location":"changelog-v1/#v170-2020-04-04","text":"Features 052c18d Binaries compiled with latest Rust v1.42.0 4ae5b1a Update dependencies (April 4 th 2020) Linux binary size Static binary size was increased ( 0.1M ). From 3.9M ( v1.6.0 ) to 4.0M (current version v1.7.0 ) Codebase - 18a6cd5 - Simplify makefile build tagets. Includes checksum task (also 1c3abdf ) - Among other project structural improvements","title":"v1.7.0 - 2020-04-04"},{"location":"changelog-v1/#v160-2020-03-04","text":"Features d0e7a7f Binaries compiled with latest Rust v1.41.1 . a2a4e98 Signals termination support. View feature issue #13 resolved by PR #14 . 08d5847 Docker Alpine image upgraded to latest v3.11 . 20b9fd2 Docker entrypoint shell script for Alpine image. It gives the ability to pass flag arguments on a docker run execution or via the command option in a docker-compose file. Example: docker run --rm static-web-server:alpine --help . Flag arguments (with dashes) will be passed to static-web-server , otherwise they will be treated as shell commands. Example of an interactive run: docker run --rm -it static-web-server:alpine sh . 881f37c Dependency updates 03.03.2020. (also a96e031 , c0e96e8 ) Linux binary size Static binary size was reduced ( 0.3M ). From 4.2M ( v1.5.0 ) to 3.9M (current version v1.6.0 ) Codebase bac3914 openssl as dev-dependency vendored. 27dd9ff Update makefile cross-compiling tasks using rust-linux-darwin-builder (also 38808fb ). 478d100 Rename Docker file templates. (also ba105e4 ) 2adc5db Relocate Docker templates version script. 34e0c59 Minor documentation updates.","title":"v1.6.0 - 2020-03-04"},{"location":"changelog-v1/#v150-2020-02-02","text":"Features 6dc5056 Feat: gzip compression on demand via accept-encoding header (PR #12 resolves #10 ). eaebf82 Feat: Update dependencies Feb 02, 2020. It also resolves #11 head request method feature.","title":"v1.5.0 - 2020-02-02"},{"location":"changelog-v1/#v140-2020-01-15","text":"Features d195e74 Feat: Add TLS/SSL support (PR #9 resolves #2 ). Introducing three new options such as --tls , --tls-pkcs12 and --tls-pkcs12-passwd as well as their corresponding environment variables. 63f2c82 Docs: Add TLS/SSL section. View usage on readme file. 9c58c9c Feat: Update to latest dependencies Jun 15, 2020. Due TLS/SSL feature the Linux binary size has incremented ( 2,3MB ) from 1.8MB to 4.1MB . Misc cf0fb53 Docs: Update new options usage in readme file a7d55ad Fix: Permissions for Rust project directory 86f8d8a Feat: Add more sections to Cargo manifest file","title":"v1.4.0 - 2020-01-15"},{"location":"changelog-v1/#v130-2020-01-07","text":"Features 9179bc3 Add binary support for Macos x86_64-apple-darwin thanks to Rust Linux / Darwin Builder . Resolves issue #8 . 1509f5f Update dependencies Jan 7, 2020 Misc 92b04e1 Add Linux and Darwin makefile tasks a7a6d61 Fix tarball and shrinking makefile tasks 56c425a Remove Github release step from Drone pipeline","title":"v1.3.0 - 2020-01-07"},{"location":"changelog-v1/#v120-2019-12-26","text":"Features 2979f7a Makes optional the error pages feature introducing default response HTML messages for 400 and 50x errors. (PR #7 resolves #6 ) Refactors 8a90486 Update pages and assets example 3e64cbb Update server config information Misc 593ca98 Minor documentation updates 9f63108 Disable Travis CI email notifications","title":"v1.2.0 - 2019-12-26"},{"location":"changelog-v1/#v110-2019-12-25","text":"Features Rust v1.40.0 ( 73528e3 2019-12-16) CLI options support. PR #4 by @dlalic resolves #1 . See README file for more details. Error pages support. PR #5 resolves #3 . See README file for more details. Binary size increment ( 0.4MB ) from 1.4MB to 1.8MB . Breaking changes Due error HTML pages feature #5 now the server requires two settings for display 404 and 50x errors. For example if you use environment variables try to append following variables with the two paths of your HTML pages: # HTML file path for 404 errors SERVER_ERROR_PAGE_404 = ./public/404.html # HTML file path for 50x errors SERVER_ERROR_PAGE_50X = ./public/50x.html Or via CLI options: --page404 <page404> HTML file path for 404 errors [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] Refactors - 112a1f3 Update dockefile templates metadata - b34624c Dependency updates - 5e9abd4 Apply cargo fix --edition to entire project - 4712b9c Minor tweaks for Cargo make tasks - 6fb65b2 Rename env.rs to config.rs . - New updated fork dependency iron-staticfile-middleware - Minor project code base improvements","title":"v1.1.0 - 2019-12-25"},{"location":"changelog-v1/#v100-2019-11-28","text":"This is the first major release Features Rust v1.39.0 ( 4560ea788 2019-11-04) Binary size reduction for this current release from 1.6MB to 1.4MB .","title":"v1.0.0 - 2019-11-28"},{"location":"changelog-v1/#v100-beta4-2019-11-28","text":"Updates eb96054 Refactor project structure eb96054 Update dependencies eb96054 Support for latest Rust v1.39.0 ( [4560ea7](https://github.com/joseluisq/static-web-server/commit/4560ea7) 2019-11-04) Deployment 2fd780e Fix Cargo package config file name and version extraction 3a69088 Fix release tarball files generation Misc Binary size reduction for this current release from 1.6M to 1.4M .","title":"v1.0.0-beta.4 - 2019-11-28"},{"location":"changelog-v1/#v100-beta3-2019-10-10","text":"Features Add Rust v1.38.0 ( 625451e 2019-09-23) compiling support.","title":"v1.0.0-beta.3 - 2019-10-10"},{"location":"changelog-v1/#v100-beta2-2019-09-05","text":"","title":"v1.0.0-beta.2 - 2019-09-05"},{"location":"changelog-v2/","text":"Static Web Server v2 - Changelog \u00b6 All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Note: See changelog for v1 under the 1.x branch. v2.1.0 - 2021-10-23 \u00b6 Fixes 5f3842b Update dependencies including Hyper, Tokio, h2, futures, tracing bug/security fixes and related crates (also 5528bcb , dc98fbb ). 62e98c6 aarch64-unknown-linux-musl build fails using Rust nightly. Features abc76a8 Basic HTTP Authentication support via the new --basic-auth option. PR #55 resolves #53 suggested by @bjornharrtell . Refactorings 0273611 Prefer futures-util over futures dependency. c3bfa68 Use Rust 1.56.0 (2021 Edition) on CI. Docs f89c5c9 Describe Basic HTTP Authentication feature. a6d0e53 Minor general description improvements. v2.0.3 - 2021-09-29 \u00b6 Fixes 5de5874 Update dependencies including Hyper, Tokio, http, futures, tracing bug fixes and related crates (also 1c6c873 34efa49 , 6fb832b ) Refactorings b2f09ab Remove optional extra Docker volume /public of scratch and alpine images. PR #52 resolves #51 reported by @bergi9 . 906106f Remove never read origins_str field on Cors module. 6f7a6bc Fix Rust edition idioms. Tests 166e869 More Cors test cases. v2.0.2 - 2021-08-29 \u00b6 Fixes ab83e2a Update dependencies including Hyper, h2, httparse bug fixes. Tokio leak fix and related crates (also adb8ca6 ) v2.0.1 - 2021-08-18 \u00b6 Fixes 2459ec4 Return incorrect first bytes range when final bytes are requested. For example a request using Range: bytes=-10 header returned incorrectly the first 10 bytes rather than the last 10 ones. Updates 122e1bd Update dependencies including Hyper and Tokio bug fixes, Brotli, Serde and related crates (also 0b413f9 , fa130fa , 167e1de , fa32375 , 2d1c5f3 ) Refactorings 8fc1812 Remove needless borrow on static file and handle modules. 27f5687 UTF-8 for default Docker index.html file. ffb2e54 Update Rust stable to 1.54.0 on CI. Tests 5cdcffc More directory listing test cases. c7e8ec9 More static files test cases. 37f2371 More static file methods and compression test cases. dd7f995 More static file test cases for during request handling. Docs f389cbc Minor badges and link updates. v2.0.0 - 2021-07-18 \u00b6 The second major stable release is finally available after around half a year of work. It introduces notable changes including new features, performance improvements and new targets support like ARM64 and OSes like FreeBSD. This version was re-written almost from scratch on top of Hyper and Tokio runtime which give us the Rust asynchronous ability by default and latest HTTP/1 - HTTP/2 implementation improvements. However it still try to keep the same principles of its first version: lightness and easy to use. Therefore a migration should not be a big deal. Your feedback is very appreciated. Features \u00b6 This list only shows new features not present in previous v1. Static Web Server is now asynchronous by default powered by latest Hyper and Tokio. It supports opt-in GZip, Deflate and Brotli compression for text-based web files only. HTTP/2 + TLS support (via --http2 option). Security headers like STS, CSP and others for HTTP/2 by default. Customizable number of worker threads (via --threads-multiplier option). Redesigned directory listing (via --directory-listing option). Cache control header is now optional (via --cache-control-headers ). Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Via --fd option. Thanks to @tim-seoss . Binaries for various i686/x86_64 targets (Linux/Windows/FreeBSD) and ARM/ARM64 (Linux/Macos M1) For the full list, options details and usage please check it out the README file. Breaking changes \u00b6 This major version has few breaking changes. However a migration should not represent a problem. Please have in mind the following changes: The server supports now only a root directory path (via --root or its equivalent env) so an assets path option is no longer required. Cache control headers is applied to assets in an arbitrary manner. See src/control_headers.rs for more details. OpenSSL TLS for HTTP/1 is not longer supported instead for the HTTP/2 + TLS (via --http2 option) the server uses h2 which is on top of Rustls . It means that instead of using a .p12 or .pfx file you can now use only a certificate file along with its private key. More details on README file. The rest of known options are equivalent to v1 except the new ones of course. However it's worth to always recommend to test this server update first with your applications on a development environment or similar. Please see the full list of options with their details on the README file. Changes after the latest v2.0.0-beta.7 release: Performance 157ade1 Decrease few allocations during 404/50x error page responses. 941572c Reduce few allocations on control headers checking. Features 012b626 Cache control headers optional via --cache-control-headers . Refactorings 5aa587f Minor syntax improvements on static file module. 45988db Minor style updates on server module. Docs 5bcc629 FreeBSD targets description. dffdf5c Changelog support. v2.0.0-beta.7 - 2021-07-09 \u00b6 Seventh and last beta release v2.0.0-beta.7 with notable changes. Updates 9e90b38 Hyper 0.14.10 dependency update which fixes two security issues . Features 432b591 FreeBSD i686 and x86_64 targets support. i686-unknown-freebsd x86_64-unknown-freebsd Find the binaries for new targets attached to this release. Performance 70a76ed Optimize root path of static file module which increases performance and reduces memory usage. Codebase 2aa130d Move source ./public to ./docker dir. v2.0.0-beta.6 - 2021-07-07 \u00b6 Sixth beta release v2.0.0-beta.6 with notable changes. Updates 33040d0 Update dependencies including latest Tokio and related crates (also a4ef322 , 26b3fbc , e07c333 ). Fixes a1b7836 Missing Content-Type header for directory listing index and error pages. Features e2bf778 Windows 64-bit target support. It also improves Ctrl+C signal handling cross-platform. Note Windows ARM64 is in stand by temporarily, see README file for more details. 0fa5015 Windows/Linux i686 targets support and one Windows x86_64 i686-pc-windows-msvc i686-unknown-linux-gnu i686-unknown-linux-musl x86_64-pc-windows-gnu 59cf8bc More text-based mime types for compression. text/csv text/calendar text/markdown text/x-yaml text/x-toml application/rtf application/xhtml+xml Find the binaries for new targets attached to this release and all targets supported also described in the README file. Refactorings 2a699e4 Follow symlinks during directory listing, displaying the index page properly for symlinks that points to directories or files. b4f1bcc Prefer stabilized Poll::map_err on compression stream. 55ffd06 Handle potencial panic for 404/50x error page responses. 920acb2 Prefer to_owned() for string literals over to_string() in some cases. c0dca6e Improve directory path scanning when directory listing. 0ed6287 Auto compression error result logging. 87b8744 Minor server config info updates. b025536 Minor code styling and docs changes. Release notes FreeBSD i686/x86_64 binaries are coming in next and last beta release which is very close to the final v2 releasing. v2.0.0-beta.5 - 2021-06-22 \u00b6 Fifth beta release v2.0.0-beta.5 with notable changes. Updates 5343a22 Update dependencies including latest Hyper, Tokio and related crates. (also bcb8493 , e51f969 , e51f969 ) Features c96af53 Security headers for HTTP/2 by default ( --security-headers ). PR #44 resolves #39 3c95d1a Support five more targets. (also e6faff8 ) x86_64-unknown-linux-gnu aarch64-apple-darwin aarch64-unknown-linux-gnu aarch64-unknown-linux-musl arm-unknown-linux-gnueabihf Find binaries for those targets attached to this release. Note about releases Rust Nightly is powering the releases from now on the CI. This makes possible to reach more targets in the future. For more details about it see Rust Nightly targets supported . However clarify that the static-web-server project is not using any nightly feature but only stable Rust ones and the project is also tested against nightly and stable Rust on CI periodically in order to be notified in case of \"regressions or bugs introduced in Nightly Rust\" . However it is known that the nightly compiler is very stable therefore the reason why we have chosen it for release targets via CI like many other popular Rust projects. In any case, please don't hesitate to file an issue or send a PR. Refactorings 2b2da3a --http2-tls-cert and --http2-tls-key options now require --http2 enabled. 6fe04a5 Update Docker files in order to get the new Linux binary source. 77d231c Drop redudant reference on CORS module. d5189ec Drop root arc-path on static files module. v2.0.0-beta.4 - 2021-06-02 \u00b6 Fourth beta release v2.0.0-beta.4 with notable changes. Updates a8b9379 Binaries compiled with latest Rust 1.52.1 release. c3389cc Update dependencies including latest Hyper, Tokio and related crates. (also 7cbe483 ) Features 21bdf8c Support inheriting TCP listener from parent process via file descriptor ( -f , --fd ). PR #40 by @tim-seoss . 5428eb3 Redefined directory listing ( -z , --directory-listing ). PR #41 d389803 Opt-in response body auto compression (Gzip, Deflate, Brotli) based on Accept-Encoding header ( -x , --compression ). 74b9eaf Just one file associated metadata per request as possible. af9a329 CORS support ( -c , --cors-allow-origins ). 6ed3fe5 Unix-like termination signals handling. Refactorings a8d462a Drop Warp in favor of just Hyper + Tokio . PR #38 04ec1b1 One worker thread per available core by default ( -n , --threads-multiplier ). 991d4b8 Introduce a custom Hyper service implementation for the HTTP1 & HTTP2 web servers. 58ff9b7 Reject non HEAD or GET requests on static assets and error page handlers. 5cede7e Log info for compression and directory listing features. Docs All feature flags as well as their equivalent environment variables are described on the updated README file. v2.0.0-beta.3 - 2021-04-20 \u00b6 Third beta release v2.0.0-beta.3 with notable changes. Updates 7f29c90 Binaries compiled with latest Rust 1.51.0 release. 97d75e0 Alpine 3.13 Docker image. 97d75e0 Update dependencies including latest Tokio v1 , Warp v0.3 (with Hyper v0.14 ) and related crates (also e9384e9 , 5d4421d ) Refactorings 5d8b266 Static server configuration and static default error pages content. e853410 Drop support for Deflate compression. bbb5a8f Improve log information on server runtime setup. c05471f Tokio server tasks simplifications. 7ea40a7 Minor CLI typos. Fixes 99b8b7e Linking error for ring crate during Darwin build. Docs 3c36c9b Minor README description improvements. v2.0.0-beta.2 - 2021-01-30 \u00b6 Second beta release v2.0.0-beta.2 with notable changes. Updates 9867d71 Update dependencies including latest Tokio v1 , Warp v0.3 (with Hyper v0.14 ) and related crates. (also a4421c6 , 960a681 , 960a681 ) Features 3007e74 Project sponsor support. Consider to support the project via github.com/sponsors/joseluisq or paypal.me/joseluisqs . 360ae99 Worker threads multiplier option --threads-multiplier which provides the ability to customize number of worker threads. ed0d6ac Custom error pages support. 4667b10 HTTP/2 + TLS support. 8c4ce94 CORS support. More details about features on README file. Refactorings 6d3e2d1 Remove redundant 'static lifetime on constants. 866c7cd Remove Tokio macros feature. f7f2bf6 Some improvement suggestions by Clippy . bff49a0 Few improvement on filter and helper modules. Codebase 7265f6b Github Actions as new CI. c63b549 Remove Travis CI. 65250c0 Minor simplications on server module. b94fe72 Update core modules structure. da5bdc3 Re-export few core lib modules. 57c27f4 Deny(warnings) on lib a3744d4 Simplify conditionals on rejection filter. Docs 933a3c4 Feature documentations updates (also 0ef21c4 ) 78033d0 CLI arguments and environment variables descriptions. v2.0.0-beta.1 - 2021-01-12 \u00b6 First major beta release v2.0.0-beta.1 with notable changes. Built-in features \u00b6 It uses Tokio v0.2 and Warp v0.2 ( Hyper v0.13 ). PR #28 Environment variables and CLI arguments setup Lightweight and configurable logging Head responses support GZip, Deflate and Brotli compression support Compression for text-based web file only Termination signal handling. Default error pages (404, 500x, etc) GZip, Deflate or Brotli compression can be optional Compression on demand via Accept-Encoding header Cache control headers for assets Docker scratch & Alpine images MacOs binary support Bugfixes \u00b6 Resolves #24 - Error on 8GB file Additional features \u00b6 Resolves #17 - Make assets directory path optional. Since this major release doesn't include an assets dir just a root.","title":"Changelog v2"},{"location":"changelog-v2/#static-web-server-v2-changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Note: See changelog for v1 under the 1.x branch.","title":"Static Web Server v2 - Changelog"},{"location":"changelog-v2/#v210-2021-10-23","text":"Fixes 5f3842b Update dependencies including Hyper, Tokio, h2, futures, tracing bug/security fixes and related crates (also 5528bcb , dc98fbb ). 62e98c6 aarch64-unknown-linux-musl build fails using Rust nightly. Features abc76a8 Basic HTTP Authentication support via the new --basic-auth option. PR #55 resolves #53 suggested by @bjornharrtell . Refactorings 0273611 Prefer futures-util over futures dependency. c3bfa68 Use Rust 1.56.0 (2021 Edition) on CI. Docs f89c5c9 Describe Basic HTTP Authentication feature. a6d0e53 Minor general description improvements.","title":"v2.1.0 - 2021-10-23"},{"location":"changelog-v2/#v203-2021-09-29","text":"Fixes 5de5874 Update dependencies including Hyper, Tokio, http, futures, tracing bug fixes and related crates (also 1c6c873 34efa49 , 6fb832b ) Refactorings b2f09ab Remove optional extra Docker volume /public of scratch and alpine images. PR #52 resolves #51 reported by @bergi9 . 906106f Remove never read origins_str field on Cors module. 6f7a6bc Fix Rust edition idioms. Tests 166e869 More Cors test cases.","title":"v2.0.3 - 2021-09-29"},{"location":"changelog-v2/#v202-2021-08-29","text":"Fixes ab83e2a Update dependencies including Hyper, h2, httparse bug fixes. Tokio leak fix and related crates (also adb8ca6 )","title":"v2.0.2 - 2021-08-29"},{"location":"changelog-v2/#v201-2021-08-18","text":"Fixes 2459ec4 Return incorrect first bytes range when final bytes are requested. For example a request using Range: bytes=-10 header returned incorrectly the first 10 bytes rather than the last 10 ones. Updates 122e1bd Update dependencies including Hyper and Tokio bug fixes, Brotli, Serde and related crates (also 0b413f9 , fa130fa , 167e1de , fa32375 , 2d1c5f3 ) Refactorings 8fc1812 Remove needless borrow on static file and handle modules. 27f5687 UTF-8 for default Docker index.html file. ffb2e54 Update Rust stable to 1.54.0 on CI. Tests 5cdcffc More directory listing test cases. c7e8ec9 More static files test cases. 37f2371 More static file methods and compression test cases. dd7f995 More static file test cases for during request handling. Docs f389cbc Minor badges and link updates.","title":"v2.0.1 - 2021-08-18"},{"location":"changelog-v2/#v200-2021-07-18","text":"The second major stable release is finally available after around half a year of work. It introduces notable changes including new features, performance improvements and new targets support like ARM64 and OSes like FreeBSD. This version was re-written almost from scratch on top of Hyper and Tokio runtime which give us the Rust asynchronous ability by default and latest HTTP/1 - HTTP/2 implementation improvements. However it still try to keep the same principles of its first version: lightness and easy to use. Therefore a migration should not be a big deal. Your feedback is very appreciated.","title":"v2.0.0 - 2021-07-18"},{"location":"changelog-v2/#features","text":"This list only shows new features not present in previous v1. Static Web Server is now asynchronous by default powered by latest Hyper and Tokio. It supports opt-in GZip, Deflate and Brotli compression for text-based web files only. HTTP/2 + TLS support (via --http2 option). Security headers like STS, CSP and others for HTTP/2 by default. Customizable number of worker threads (via --threads-multiplier option). Redesigned directory listing (via --directory-listing option). Cache control header is now optional (via --cache-control-headers ). Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Via --fd option. Thanks to @tim-seoss . Binaries for various i686/x86_64 targets (Linux/Windows/FreeBSD) and ARM/ARM64 (Linux/Macos M1) For the full list, options details and usage please check it out the README file.","title":"Features"},{"location":"changelog-v2/#breaking-changes","text":"This major version has few breaking changes. However a migration should not represent a problem. Please have in mind the following changes: The server supports now only a root directory path (via --root or its equivalent env) so an assets path option is no longer required. Cache control headers is applied to assets in an arbitrary manner. See src/control_headers.rs for more details. OpenSSL TLS for HTTP/1 is not longer supported instead for the HTTP/2 + TLS (via --http2 option) the server uses h2 which is on top of Rustls . It means that instead of using a .p12 or .pfx file you can now use only a certificate file along with its private key. More details on README file. The rest of known options are equivalent to v1 except the new ones of course. However it's worth to always recommend to test this server update first with your applications on a development environment or similar. Please see the full list of options with their details on the README file. Changes after the latest v2.0.0-beta.7 release: Performance 157ade1 Decrease few allocations during 404/50x error page responses. 941572c Reduce few allocations on control headers checking. Features 012b626 Cache control headers optional via --cache-control-headers . Refactorings 5aa587f Minor syntax improvements on static file module. 45988db Minor style updates on server module. Docs 5bcc629 FreeBSD targets description. dffdf5c Changelog support.","title":"Breaking changes"},{"location":"changelog-v2/#v200-beta7-2021-07-09","text":"Seventh and last beta release v2.0.0-beta.7 with notable changes. Updates 9e90b38 Hyper 0.14.10 dependency update which fixes two security issues . Features 432b591 FreeBSD i686 and x86_64 targets support. i686-unknown-freebsd x86_64-unknown-freebsd Find the binaries for new targets attached to this release. Performance 70a76ed Optimize root path of static file module which increases performance and reduces memory usage. Codebase 2aa130d Move source ./public to ./docker dir.","title":"v2.0.0-beta.7 - 2021-07-09"},{"location":"changelog-v2/#v200-beta6-2021-07-07","text":"Sixth beta release v2.0.0-beta.6 with notable changes. Updates 33040d0 Update dependencies including latest Tokio and related crates (also a4ef322 , 26b3fbc , e07c333 ). Fixes a1b7836 Missing Content-Type header for directory listing index and error pages. Features e2bf778 Windows 64-bit target support. It also improves Ctrl+C signal handling cross-platform. Note Windows ARM64 is in stand by temporarily, see README file for more details. 0fa5015 Windows/Linux i686 targets support and one Windows x86_64 i686-pc-windows-msvc i686-unknown-linux-gnu i686-unknown-linux-musl x86_64-pc-windows-gnu 59cf8bc More text-based mime types for compression. text/csv text/calendar text/markdown text/x-yaml text/x-toml application/rtf application/xhtml+xml Find the binaries for new targets attached to this release and all targets supported also described in the README file. Refactorings 2a699e4 Follow symlinks during directory listing, displaying the index page properly for symlinks that points to directories or files. b4f1bcc Prefer stabilized Poll::map_err on compression stream. 55ffd06 Handle potencial panic for 404/50x error page responses. 920acb2 Prefer to_owned() for string literals over to_string() in some cases. c0dca6e Improve directory path scanning when directory listing. 0ed6287 Auto compression error result logging. 87b8744 Minor server config info updates. b025536 Minor code styling and docs changes. Release notes FreeBSD i686/x86_64 binaries are coming in next and last beta release which is very close to the final v2 releasing.","title":"v2.0.0-beta.6 - 2021-07-07"},{"location":"changelog-v2/#v200-beta5-2021-06-22","text":"Fifth beta release v2.0.0-beta.5 with notable changes. Updates 5343a22 Update dependencies including latest Hyper, Tokio and related crates. (also bcb8493 , e51f969 , e51f969 ) Features c96af53 Security headers for HTTP/2 by default ( --security-headers ). PR #44 resolves #39 3c95d1a Support five more targets. (also e6faff8 ) x86_64-unknown-linux-gnu aarch64-apple-darwin aarch64-unknown-linux-gnu aarch64-unknown-linux-musl arm-unknown-linux-gnueabihf Find binaries for those targets attached to this release. Note about releases Rust Nightly is powering the releases from now on the CI. This makes possible to reach more targets in the future. For more details about it see Rust Nightly targets supported . However clarify that the static-web-server project is not using any nightly feature but only stable Rust ones and the project is also tested against nightly and stable Rust on CI periodically in order to be notified in case of \"regressions or bugs introduced in Nightly Rust\" . However it is known that the nightly compiler is very stable therefore the reason why we have chosen it for release targets via CI like many other popular Rust projects. In any case, please don't hesitate to file an issue or send a PR. Refactorings 2b2da3a --http2-tls-cert and --http2-tls-key options now require --http2 enabled. 6fe04a5 Update Docker files in order to get the new Linux binary source. 77d231c Drop redudant reference on CORS module. d5189ec Drop root arc-path on static files module.","title":"v2.0.0-beta.5 - 2021-06-22"},{"location":"changelog-v2/#v200-beta4-2021-06-02","text":"Fourth beta release v2.0.0-beta.4 with notable changes. Updates a8b9379 Binaries compiled with latest Rust 1.52.1 release. c3389cc Update dependencies including latest Hyper, Tokio and related crates. (also 7cbe483 ) Features 21bdf8c Support inheriting TCP listener from parent process via file descriptor ( -f , --fd ). PR #40 by @tim-seoss . 5428eb3 Redefined directory listing ( -z , --directory-listing ). PR #41 d389803 Opt-in response body auto compression (Gzip, Deflate, Brotli) based on Accept-Encoding header ( -x , --compression ). 74b9eaf Just one file associated metadata per request as possible. af9a329 CORS support ( -c , --cors-allow-origins ). 6ed3fe5 Unix-like termination signals handling. Refactorings a8d462a Drop Warp in favor of just Hyper + Tokio . PR #38 04ec1b1 One worker thread per available core by default ( -n , --threads-multiplier ). 991d4b8 Introduce a custom Hyper service implementation for the HTTP1 & HTTP2 web servers. 58ff9b7 Reject non HEAD or GET requests on static assets and error page handlers. 5cede7e Log info for compression and directory listing features. Docs All feature flags as well as their equivalent environment variables are described on the updated README file.","title":"v2.0.0-beta.4 - 2021-06-02"},{"location":"changelog-v2/#v200-beta3-2021-04-20","text":"Third beta release v2.0.0-beta.3 with notable changes. Updates 7f29c90 Binaries compiled with latest Rust 1.51.0 release. 97d75e0 Alpine 3.13 Docker image. 97d75e0 Update dependencies including latest Tokio v1 , Warp v0.3 (with Hyper v0.14 ) and related crates (also e9384e9 , 5d4421d ) Refactorings 5d8b266 Static server configuration and static default error pages content. e853410 Drop support for Deflate compression. bbb5a8f Improve log information on server runtime setup. c05471f Tokio server tasks simplifications. 7ea40a7 Minor CLI typos. Fixes 99b8b7e Linking error for ring crate during Darwin build. Docs 3c36c9b Minor README description improvements.","title":"v2.0.0-beta.3 - 2021-04-20"},{"location":"changelog-v2/#v200-beta2-2021-01-30","text":"Second beta release v2.0.0-beta.2 with notable changes. Updates 9867d71 Update dependencies including latest Tokio v1 , Warp v0.3 (with Hyper v0.14 ) and related crates. (also a4421c6 , 960a681 , 960a681 ) Features 3007e74 Project sponsor support. Consider to support the project via github.com/sponsors/joseluisq or paypal.me/joseluisqs . 360ae99 Worker threads multiplier option --threads-multiplier which provides the ability to customize number of worker threads. ed0d6ac Custom error pages support. 4667b10 HTTP/2 + TLS support. 8c4ce94 CORS support. More details about features on README file. Refactorings 6d3e2d1 Remove redundant 'static lifetime on constants. 866c7cd Remove Tokio macros feature. f7f2bf6 Some improvement suggestions by Clippy . bff49a0 Few improvement on filter and helper modules. Codebase 7265f6b Github Actions as new CI. c63b549 Remove Travis CI. 65250c0 Minor simplications on server module. b94fe72 Update core modules structure. da5bdc3 Re-export few core lib modules. 57c27f4 Deny(warnings) on lib a3744d4 Simplify conditionals on rejection filter. Docs 933a3c4 Feature documentations updates (also 0ef21c4 ) 78033d0 CLI arguments and environment variables descriptions.","title":"v2.0.0-beta.2 - 2021-01-30"},{"location":"changelog-v2/#v200-beta1-2021-01-12","text":"First major beta release v2.0.0-beta.1 with notable changes.","title":"v2.0.0-beta.1 - 2021-01-12"},{"location":"changelog-v2/#built-in-features","text":"It uses Tokio v0.2 and Warp v0.2 ( Hyper v0.13 ). PR #28 Environment variables and CLI arguments setup Lightweight and configurable logging Head responses support GZip, Deflate and Brotli compression support Compression for text-based web file only Termination signal handling. Default error pages (404, 500x, etc) GZip, Deflate or Brotli compression can be optional Compression on demand via Accept-Encoding header Cache control headers for assets Docker scratch & Alpine images MacOs binary support","title":"Built-in features"},{"location":"changelog-v2/#bugfixes","text":"Resolves #24 - Error on 8GB file","title":"Bugfixes"},{"location":"changelog-v2/#additional-features","text":"Resolves #17 - Make assets directory path optional. Since this major release doesn't include an assets dir just a root.","title":"Additional features"},{"location":"contributions/","text":"Contributions \u00b6 Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in current work by you, as defined in the Apache License (Version 2.0) license, shall be dual licensed as described below, without any additional terms or conditions. Feel free to send some Pull request or file an issue .","title":"Contributions"},{"location":"contributions/#contributions","text":"Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in current work by you, as defined in the Apache License (Version 2.0) license, shall be dual licensed as described below, without any additional terms or conditions. Feel free to send some Pull request or file an issue .","title":"Contributions"},{"location":"download-and-install/","text":"Download and Install \u00b6 Latest featured downloads Linux x86_64 macOS x86_64 Windows x86_64 See all available releases . v2.1.0 - 2021-10-23 \u00b6 See v2.1.0 release history . static-web-server-v2.1.0-aarch64-apple-darwin.tar.gz 076b7e801a3252ccee9391d94a517bf9d70e29d1b93c744c9ea7d9fa3ffc63fb static-web-server-v2.1.0-aarch64-unknown-linux-gnu.tar.gz 7efd6f5b4db3cd7fc423d3d3a7c68f1b86411449f2a2030aeb19aea857db9f5e static-web-server-v2.1.0-aarch64-unknown-linux-musl.tar.gz 5888d772b0ecf93d87eb39def45c5b09d7ac2fc8a236d6e65fd46035b5ed4afb static-web-server-v2.1.0-arm-unknown-linux-gnueabihf.tar.gz cde040c48d7032c1a6d9f7990322112c3f423ed4b527c77d10b9d71a32246351 static-web-server-v2.1.0-i686-pc-windows-msvc.zip 4b85b8615627087720bc719e37d8b5efb7d5260caeb30b38598064675fba0227 static-web-server-v2.1.0-i686-unknown-freebsd.tar.gz 1e147aa1dd7a22ba7b9b829f60d6dc4bec20c4ff42e3ec147898d01774c88fd3 static-web-server-v2.1.0-i686-unknown-linux-gnu.tar.gz c113dfa00f04c2b6f2a1e8f1700c0710dc0a6a430d7e2a7e5f10bd1d29af5a84 static-web-server-v2.1.0-i686-unknown-linux-musl.tar.gz d6070951586785a87cc340aca64cb2df13f41f94ab3d0f7bacfbfdc7efbb8d53 static-web-server-v2.1.0-x86_64-apple-darwin.tar.gz 55ded256c9a1698ab2532d30af29b7329dd2d3c5fb073a268e4cc75dff415b74 static-web-server-v2.1.0-x86_64-pc-windows-gnu.zip 51a3dc66a346e60825636e9f29941ebd6bed1b57111b05704f3fffd9340e7a98 static-web-server-v2.1.0-x86_64-pc-windows-msvc.zip d34ac9f47e5a3f3f48c79500dcb1c80993871ab3f8e4a328ebd7ee6929ae7679 static-web-server-v2.1.0-x86_64-unknown-freebsd.tar.gz 4e7a444d314c7ea807a3731485db17e6f130285f39633f566349b51b78d3ede5 static-web-server-v2.1.0-x86_64-unknown-linux-gnu.tar.gz c39445deacef14e9e39df24235d22d9936c62cf1e1490e9c4f352b0563db9db7 static-web-server-v2.1.0-x86_64-unknown-linux-musl.tar.gz de3b0b438ed348d422e3d118863da8d20a8b395fb4af59721f50057cc82cd126","title":"Download and Install"},{"location":"download-and-install/#download-and-install","text":"Latest featured downloads Linux x86_64 macOS x86_64 Windows x86_64 See all available releases .","title":"Download and Install"},{"location":"download-and-install/#v210-2021-10-23","text":"See v2.1.0 release history . static-web-server-v2.1.0-aarch64-apple-darwin.tar.gz 076b7e801a3252ccee9391d94a517bf9d70e29d1b93c744c9ea7d9fa3ffc63fb static-web-server-v2.1.0-aarch64-unknown-linux-gnu.tar.gz 7efd6f5b4db3cd7fc423d3d3a7c68f1b86411449f2a2030aeb19aea857db9f5e static-web-server-v2.1.0-aarch64-unknown-linux-musl.tar.gz 5888d772b0ecf93d87eb39def45c5b09d7ac2fc8a236d6e65fd46035b5ed4afb static-web-server-v2.1.0-arm-unknown-linux-gnueabihf.tar.gz cde040c48d7032c1a6d9f7990322112c3f423ed4b527c77d10b9d71a32246351 static-web-server-v2.1.0-i686-pc-windows-msvc.zip 4b85b8615627087720bc719e37d8b5efb7d5260caeb30b38598064675fba0227 static-web-server-v2.1.0-i686-unknown-freebsd.tar.gz 1e147aa1dd7a22ba7b9b829f60d6dc4bec20c4ff42e3ec147898d01774c88fd3 static-web-server-v2.1.0-i686-unknown-linux-gnu.tar.gz c113dfa00f04c2b6f2a1e8f1700c0710dc0a6a430d7e2a7e5f10bd1d29af5a84 static-web-server-v2.1.0-i686-unknown-linux-musl.tar.gz d6070951586785a87cc340aca64cb2df13f41f94ab3d0f7bacfbfdc7efbb8d53 static-web-server-v2.1.0-x86_64-apple-darwin.tar.gz 55ded256c9a1698ab2532d30af29b7329dd2d3c5fb073a268e4cc75dff415b74 static-web-server-v2.1.0-x86_64-pc-windows-gnu.zip 51a3dc66a346e60825636e9f29941ebd6bed1b57111b05704f3fffd9340e7a98 static-web-server-v2.1.0-x86_64-pc-windows-msvc.zip d34ac9f47e5a3f3f48c79500dcb1c80993871ab3f8e4a328ebd7ee6929ae7679 static-web-server-v2.1.0-x86_64-unknown-freebsd.tar.gz 4e7a444d314c7ea807a3731485db17e6f130285f39633f566349b51b78d3ede5 static-web-server-v2.1.0-x86_64-unknown-linux-gnu.tar.gz c39445deacef14e9e39df24235d22d9936c62cf1e1490e9c4f352b0563db9db7 static-web-server-v2.1.0-x86_64-unknown-linux-musl.tar.gz de3b0b438ed348d422e3d118863da8d20a8b395fb4af59721f50057cc82cd126","title":"v2.1.0 - 2021-10-23"},{"location":"getting-started/","text":"Getting Started \u00b6 First download the binary for your platform. Then just type the following command. static-web-server --port 8787 --root ./my-public-dir For details about the available options type static-web-server -h or go to the Command-line arguments section. Or if you are looking fo more advanced examples, take a look at the examples section.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"First download the binary for your platform. Then just type the following command. static-web-server --port 8787 --root ./my-public-dir For details about the available options type static-web-server -h or go to the Command-line arguments section. Or if you are looking fo more advanced examples, take a look at the examples section.","title":"Getting Started"},{"location":"license/","text":"License \u00b6 This work is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0) . \u00a9 2019-present Jose Quintana","title":"License"},{"location":"license/#license","text":"This work is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0) . \u00a9 2019-present Jose Quintana","title":"License"},{"location":"migration/","text":"Migration \u00b6","title":"Migration"},{"location":"migration/#migration","text":"","title":"Migration"},{"location":"platforms-architectures/","text":"Platforms & Architectures \u00b6 Currently only the following platforms/architectures are supported. Linux \u00b6 x86 \u00b6 i686-unknown-linux-gnu i686-unknown-linux-musl x86_64 \u00b6 x86_64-unknown-linux-gnu x86_64-unknown-linux-musl ARM \u00b6 arm-unknown-linux-gnueabihf ARM64 \u00b6 aarch64-unknown-linux-musl aarch64-unknown-linux-gnu macOS \u00b6 x86_64 \u00b6 x86_64-apple-darwin ARM64 \u00b6 aarch64-apple-darwin Windows \u00b6 x86 \u00b6 i686-pc-windows-msvc x86_64 \u00b6 x86_64-pc-windows-msvc x86_64-pc-windows-gnu ARM64 \u00b6 aarch64-pc-windows-msvc (temporarily disabled until briansmith/ring#1167 ) FreeBSD \u00b6 x86 \u00b6 i686-unknown-freebsd x86_64 \u00b6 x86_64-unknown-freebsd","title":"Platforms & Architectures"},{"location":"platforms-architectures/#platforms-architectures","text":"Currently only the following platforms/architectures are supported.","title":"Platforms &amp; Architectures"},{"location":"platforms-architectures/#linux","text":"","title":"Linux"},{"location":"platforms-architectures/#x86","text":"i686-unknown-linux-gnu i686-unknown-linux-musl","title":"x86"},{"location":"platforms-architectures/#x86_64","text":"x86_64-unknown-linux-gnu x86_64-unknown-linux-musl","title":"x86_64"},{"location":"platforms-architectures/#arm","text":"arm-unknown-linux-gnueabihf","title":"ARM"},{"location":"platforms-architectures/#arm64","text":"aarch64-unknown-linux-musl aarch64-unknown-linux-gnu","title":"ARM64"},{"location":"platforms-architectures/#macos","text":"","title":"macOS"},{"location":"platforms-architectures/#x86_65","text":"x86_64-apple-darwin","title":"x86_64"},{"location":"platforms-architectures/#arm64_1","text":"aarch64-apple-darwin","title":"ARM64"},{"location":"platforms-architectures/#windows","text":"","title":"Windows"},{"location":"platforms-architectures/#x86_1","text":"i686-pc-windows-msvc","title":"x86"},{"location":"platforms-architectures/#x86_66","text":"x86_64-pc-windows-msvc x86_64-pc-windows-gnu","title":"x86_64"},{"location":"platforms-architectures/#arm64_2","text":"aarch64-pc-windows-msvc (temporarily disabled until briansmith/ring#1167 )","title":"ARM64"},{"location":"platforms-architectures/#freebsd","text":"","title":"FreeBSD"},{"location":"platforms-architectures/#x86_2","text":"i686-unknown-freebsd","title":"x86"},{"location":"platforms-architectures/#x86_67","text":"x86_64-unknown-freebsd","title":"x86_64"},{"location":"semantic-versioning/","text":"Semantic Versioning \u00b6 SWS project adheres to Semantic Versioning for every release like v1 and latest v2 . Breaking changes \u00b6 Only switches between major versions \"could\" contain breaking changes or not depending on the particular case. However this project try to keep away of any kind of breaking change as possible between major versions. But it still supports and prioritizes \"no breaking changes\" for minor and patch (bug fixes) versions. In the other hand, if a breaking change is found to be \"strictly necessary\" to do. Then a new major version must be promoted as well as users informed accordingly in order they can do a seamlessly transition.","title":"Semantic Versioning"},{"location":"semantic-versioning/#semantic-versioning","text":"SWS project adheres to Semantic Versioning for every release like v1 and latest v2 .","title":"Semantic Versioning"},{"location":"semantic-versioning/#breaking-changes","text":"Only switches between major versions \"could\" contain breaking changes or not depending on the particular case. However this project try to keep away of any kind of breaking change as possible between major versions. But it still supports and prioritizes \"no breaking changes\" for minor and patch (bug fixes) versions. In the other hand, if a breaking change is found to be \"strictly necessary\" to do. Then a new major version must be promoted as well as users informed accordingly in order they can do a seamlessly transition.","title":"Breaking changes"},{"location":"configuration/command-line-arguments/","text":"Command-Line Arguments \u00b6 The server can be configured via the following command-line arguments. Remember Command-line arguments are equivalent to their environment variables . Command-line arguments take precedence over their equivalent environment variables. $ static-web-server -h static-web-server 2.1.0 Jose Quintana <https://git.io/joseluisq> A blazing fast and asynchronous web server for static files-serving. USAGE: static-web-server [OPTIONS] FLAGS: -h, --help Prints help information -V, --version Prints version information OPTIONS: --basic-auth <basic-auth> It provides The \"Basic\" HTTP Authentication scheme using credentials as \"user-id:password\" pairs. Password must be encoded using the \"BCrypt\" password-hashing function [env: SERVER_BASIC_AUTH=] [default: ] -e, --cache-control-headers <cache-control-headers> Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on `src/control_headers.rs` file [env: SERVER_CACHE_CONTROL_HEADERS=] [default: true] -x, --compression <compression> Gzip, Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text- based web file types only [env: SERVER_COMPRESSION=] [default: true] -c, --cors-allow-origins <cors-allow-origins> Specify an optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host [env: SERVER_CORS_ALLOW_ORIGINS=] [default: ] -z, --directory-listing <directory-listing> Enable directory listing for all requests ending with the slash character (\u2018/\u2019) [env: SERVER_DIRECTORY_LISTING=] [default: false] -f, --fd <fd> Instead of binding to a TCP port, accept incoming connections to an already-bound TCP socket listener on the specified file descriptor number (usually zero). Requires that the parent process (e.g. inetd, launchd, or systemd) binds an address and port on behalf of static-web-server, before arranging for the resulting file descriptor to be inherited by static-web-server. Cannot be used in conjunction with the port and host arguments. The included systemd unit file utilises this feature to increase security by allowing the static- web-server to be sandboxed more completely [env: SERVER_LISTEN_FD=] -a, --host <host> Host address (E.g 127.0.0.1 or ::1) [env: SERVER_HOST=] [default: ::] -t, --http2 <http2> Enable HTTP/2 with TLS support [env: SERVER_HTTP2_TLS=] [default: false] --http2-tls-cert <http2-tls-cert> Specify the file path to read the certificate [env: SERVER_HTTP2_TLS_CERT=] [default: ] --http2-tls-key <http2-tls-key> Specify the file path to read the private key [env: SERVER_HTTP2_TLS_KEY=] [default: ] -g, --log-level <log-level> Specify a logging level in lower case. Values: error, warn, info, debug or trace [env: SERVER_LOG_LEVEL=] [default: error] --page404 <page404> HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] -p, --port <port> Host port [env: SERVER_PORT=] [default: 80] -d, --root <root> Root directory path of static files [env: SERVER_ROOT=] [default: ./public] --security-headers <security-headers> Enable security headers by default when HTTP/2 feature is activated. Headers included: \"Strict-Transport- Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age), \"X-Frame- Options: DENY\", \"X-XSS-Protection: 1; mode=block\" and \"Content-Security-Policy: frame-ancestors 'self'\" [env: SERVER_SECURITY_HEADERS=] [default: false] -n, --threads-multiplier <threads-multiplier> Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: `worker threads = number of CPUs * n` where `n` is the value that changes here. When multiplier value is 0 or 1 then one thread per core is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side [env: SERVER_THREADS_MULTIPLIER=] [default: 1]","title":"Command Line Arguments"},{"location":"configuration/command-line-arguments/#command-line-arguments","text":"The server can be configured via the following command-line arguments. Remember Command-line arguments are equivalent to their environment variables . Command-line arguments take precedence over their equivalent environment variables. $ static-web-server -h static-web-server 2.1.0 Jose Quintana <https://git.io/joseluisq> A blazing fast and asynchronous web server for static files-serving. USAGE: static-web-server [OPTIONS] FLAGS: -h, --help Prints help information -V, --version Prints version information OPTIONS: --basic-auth <basic-auth> It provides The \"Basic\" HTTP Authentication scheme using credentials as \"user-id:password\" pairs. Password must be encoded using the \"BCrypt\" password-hashing function [env: SERVER_BASIC_AUTH=] [default: ] -e, --cache-control-headers <cache-control-headers> Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on `src/control_headers.rs` file [env: SERVER_CACHE_CONTROL_HEADERS=] [default: true] -x, --compression <compression> Gzip, Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text- based web file types only [env: SERVER_COMPRESSION=] [default: true] -c, --cors-allow-origins <cors-allow-origins> Specify an optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host [env: SERVER_CORS_ALLOW_ORIGINS=] [default: ] -z, --directory-listing <directory-listing> Enable directory listing for all requests ending with the slash character (\u2018/\u2019) [env: SERVER_DIRECTORY_LISTING=] [default: false] -f, --fd <fd> Instead of binding to a TCP port, accept incoming connections to an already-bound TCP socket listener on the specified file descriptor number (usually zero). Requires that the parent process (e.g. inetd, launchd, or systemd) binds an address and port on behalf of static-web-server, before arranging for the resulting file descriptor to be inherited by static-web-server. Cannot be used in conjunction with the port and host arguments. The included systemd unit file utilises this feature to increase security by allowing the static- web-server to be sandboxed more completely [env: SERVER_LISTEN_FD=] -a, --host <host> Host address (E.g 127.0.0.1 or ::1) [env: SERVER_HOST=] [default: ::] -t, --http2 <http2> Enable HTTP/2 with TLS support [env: SERVER_HTTP2_TLS=] [default: false] --http2-tls-cert <http2-tls-cert> Specify the file path to read the certificate [env: SERVER_HTTP2_TLS_CERT=] [default: ] --http2-tls-key <http2-tls-key> Specify the file path to read the private key [env: SERVER_HTTP2_TLS_KEY=] [default: ] -g, --log-level <log-level> Specify a logging level in lower case. Values: error, warn, info, debug or trace [env: SERVER_LOG_LEVEL=] [default: error] --page404 <page404> HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] -p, --port <port> Host port [env: SERVER_PORT=] [default: 80] -d, --root <root> Root directory path of static files [env: SERVER_ROOT=] [default: ./public] --security-headers <security-headers> Enable security headers by default when HTTP/2 feature is activated. Headers included: \"Strict-Transport- Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age), \"X-Frame- Options: DENY\", \"X-XSS-Protection: 1; mode=block\" and \"Content-Security-Policy: frame-ancestors 'self'\" [env: SERVER_SECURITY_HEADERS=] [default: false] -n, --threads-multiplier <threads-multiplier> Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: `worker threads = number of CPUs * n` where `n` is the value that changes here. When multiplier value is 0 or 1 then one thread per core is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side [env: SERVER_THREADS_MULTIPLIER=] [default: 1]","title":"Command-Line Arguments"},{"location":"configuration/environment-variables/","text":"Environment Variables \u00b6 The server can be configured via the following environment variables. Remember Environment variables are equivalent to their command-line arguments. Command line arguments take precedence over their equivalent environment variables. SERVER_HOST \u00b6 The address of the host (E.g 127.0.0.1). Default [::] . SERVER_PORT \u00b6 The port of the host. Default 80 . SERVER_LISTEN_FD \u00b6 Optional file descriptor number (e.g. 0 ) to inherit an already-opened TCP listener on (instead of using SERVER_HOST and/or SERVER_PORT ). Default empty (disabled). SERVER_ROOT \u00b6 Relative or absolute root directory path of static files. Default ./public . SERVER_LOG_LEVEL \u00b6 Specify a logging level in lower case. Possible values are error , warn , info , debug or trace . Default error . SERVER_ERROR_PAGE_404 \u00b6 HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/404.html . SERVER_ERROR_PAGE_50X \u00b6 HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/50x.html SERVER_THREADS_MULTIPLIER \u00b6 Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: worker threads = number of CPUs * n where n is the value that changes here. When multiplier value is 0 or 1 then the number of CPUs is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. Default one thread per core. SERVER_HTTP2_TLS \u00b6 Enable HTTP/2 with TLS support. Make sure also to adjust current server port. Default false (disabled). SERVER_HTTP2_TLS_CERT \u00b6 Specify the file path to read the certificate. Default empty (disabled). SERVER_HTTP2_TLS_KEY \u00b6 Specify the file path to read the private key. Default empty (disabled). SERVER_CORS_ALLOW_ORIGINS \u00b6 Specify a optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host. Default empty (disabled). SERVER_COMPRESSION \u00b6 Gzip , Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text-based web file types only. See ad-hoc mime-type list . Default true (enabled). SERVER_DIRECTORY_LISTING \u00b6 Enable directory listing for all requests ending with the slash character (\u2018/\u2019). Default false (disabled). SERVER_SECURITY_HEADERS \u00b6 Enable security headers by default when HTTP/2 feature is activated. Headers included: Strict-Transport-Security: max-age=63072000; includeSubDomains; preload (2 years max-age), X-Frame-Options: DENY , X-XSS-Protection: 1; mode=block and Content-Security-Policy: frame-ancestors 'self' . Default false (disabled). SERVER_CACHE_CONTROL_HEADERS \u00b6 Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on src/control_headers.rs file. Default true (enabled). SERVER_BASIC_AUTH \u00b6 It provides The \"Basic\" HTTP Authentication Scheme using credentials as user-id:password pairs, encoded using Base64 . Password must be encoded using the BCrypt password-hashing function. Default empty (disabled).","title":"Environment Variables"},{"location":"configuration/environment-variables/#environment-variables","text":"The server can be configured via the following environment variables. Remember Environment variables are equivalent to their command-line arguments. Command line arguments take precedence over their equivalent environment variables.","title":"Environment Variables"},{"location":"configuration/environment-variables/#server_host","text":"The address of the host (E.g 127.0.0.1). Default [::] .","title":"SERVER_HOST"},{"location":"configuration/environment-variables/#server_port","text":"The port of the host. Default 80 .","title":"SERVER_PORT"},{"location":"configuration/environment-variables/#server_listen_fd","text":"Optional file descriptor number (e.g. 0 ) to inherit an already-opened TCP listener on (instead of using SERVER_HOST and/or SERVER_PORT ). Default empty (disabled).","title":"SERVER_LISTEN_FD"},{"location":"configuration/environment-variables/#server_root","text":"Relative or absolute root directory path of static files. Default ./public .","title":"SERVER_ROOT"},{"location":"configuration/environment-variables/#server_log_level","text":"Specify a logging level in lower case. Possible values are error , warn , info , debug or trace . Default error .","title":"SERVER_LOG_LEVEL"},{"location":"configuration/environment-variables/#server_error_page_404","text":"HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/404.html .","title":"SERVER_ERROR_PAGE_404"},{"location":"configuration/environment-variables/#server_error_page_50x","text":"HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/50x.html","title":"SERVER_ERROR_PAGE_50X"},{"location":"configuration/environment-variables/#server_threads_multiplier","text":"Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: worker threads = number of CPUs * n where n is the value that changes here. When multiplier value is 0 or 1 then the number of CPUs is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. Default one thread per core.","title":"SERVER_THREADS_MULTIPLIER"},{"location":"configuration/environment-variables/#server_http2_tls","text":"Enable HTTP/2 with TLS support. Make sure also to adjust current server port. Default false (disabled).","title":"SERVER_HTTP2_TLS"},{"location":"configuration/environment-variables/#server_http2_tls_cert","text":"Specify the file path to read the certificate. Default empty (disabled).","title":"SERVER_HTTP2_TLS_CERT"},{"location":"configuration/environment-variables/#server_http2_tls_key","text":"Specify the file path to read the private key. Default empty (disabled).","title":"SERVER_HTTP2_TLS_KEY"},{"location":"configuration/environment-variables/#server_cors_allow_origins","text":"Specify a optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host. Default empty (disabled).","title":"SERVER_CORS_ALLOW_ORIGINS"},{"location":"configuration/environment-variables/#server_compression","text":"Gzip , Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text-based web file types only. See ad-hoc mime-type list . Default true (enabled).","title":"SERVER_COMPRESSION"},{"location":"configuration/environment-variables/#server_directory_listing","text":"Enable directory listing for all requests ending with the slash character (\u2018/\u2019). Default false (disabled).","title":"SERVER_DIRECTORY_LISTING"},{"location":"configuration/environment-variables/#server_security_headers","text":"Enable security headers by default when HTTP/2 feature is activated. Headers included: Strict-Transport-Security: max-age=63072000; includeSubDomains; preload (2 years max-age), X-Frame-Options: DENY , X-XSS-Protection: 1; mode=block and Content-Security-Policy: frame-ancestors 'self' . Default false (disabled).","title":"SERVER_SECURITY_HEADERS"},{"location":"configuration/environment-variables/#server_cache_control_headers","text":"Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on src/control_headers.rs file. Default true (enabled).","title":"SERVER_CACHE_CONTROL_HEADERS"},{"location":"configuration/environment-variables/#server_basic_auth","text":"It provides The \"Basic\" HTTP Authentication Scheme using credentials as user-id:password pairs, encoded using Base64 . Password must be encoded using the BCrypt password-hashing function. Default empty (disabled).","title":"SERVER_BASIC_AUTH"},{"location":"examples/basic-authentication/","text":"Basic HTTP Authentication \u00b6 SWS provides \"Basic\" HTTP Authentication Scheme using a user-id/password pairs encoded with Base64 . This feature is disabled by default and can be controlled by the string --basic-auth option or the equivalent SERVER_BASIC_AUTH env. First, create a user-id/password pair using your favourite tool. Note Only the password must be encoded using the BCrypt password-hashing function. In this example we are using the Apache htpasswd tool. htpasswd -nbBC5 \"username\" \"password\" # username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK Tip The password verification happens at runtime but its verification speed depends on the computing time cost of bcrypt algorithm used. For example the htpasswd tool supports a -C argument in order to adjust the bcrypt 's computing time. Using a higher value is more secure but slower. The default values is 5 and the possible values are ranging from 4 to 17 . Finally assign the credentails and run the server. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --basic-auth 'username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK'","title":"Basic Authentication"},{"location":"examples/basic-authentication/#basic-http-authentication","text":"SWS provides \"Basic\" HTTP Authentication Scheme using a user-id/password pairs encoded with Base64 . This feature is disabled by default and can be controlled by the string --basic-auth option or the equivalent SERVER_BASIC_AUTH env. First, create a user-id/password pair using your favourite tool. Note Only the password must be encoded using the BCrypt password-hashing function. In this example we are using the Apache htpasswd tool. htpasswd -nbBC5 \"username\" \"password\" # username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK Tip The password verification happens at runtime but its verification speed depends on the computing time cost of bcrypt algorithm used. For example the htpasswd tool supports a -C argument in order to adjust the bcrypt 's computing time. Using a higher value is more secure but slower. The default values is 5 and the possible values are ranging from 4 to 17 . Finally assign the credentails and run the server. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --basic-auth 'username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK'","title":"Basic HTTP Authentication"},{"location":"examples/cache-control-headers/","text":"Cache Control Headers \u00b6 SWS provides support for Cache-Control HTTP header specifying a public and max-age response directives. This feature is enabled by default and can be controlled by the boolean -e, --cache-control-headers option or the equivalent SERVER_CACHE_CONTROL_HEADERS env. Cache-Control Max-Age \u00b6 Control headers are applied only to the following file types with the corresponding max-age values. One day \u00b6 A max-age of one day duration is used by default. Note One day max-age for example includes html and other file types. One hour \u00b6 A max-age of one hour is applied only to the following file types. atom, json, rss, xml One year \u00b6 A max-age of one year is applied only to the following file types. bmp, bz2, css, doc, gif, gz, htc, ico, jpeg, jpg, js, map, mjs, mp3, mp4, ogg, ogv, pdf, png, rar, rtf, tar, tgz, wav, weba, webm, webp, woff, woff2, zip Below an example of how to enable the feature. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cache-control-headers true","title":"Cache Control Headers"},{"location":"examples/cache-control-headers/#cache-control-headers","text":"SWS provides support for Cache-Control HTTP header specifying a public and max-age response directives. This feature is enabled by default and can be controlled by the boolean -e, --cache-control-headers option or the equivalent SERVER_CACHE_CONTROL_HEADERS env.","title":"Cache Control Headers"},{"location":"examples/cache-control-headers/#cache-control-max-age","text":"Control headers are applied only to the following file types with the corresponding max-age values.","title":"Cache-Control Max-Age"},{"location":"examples/cache-control-headers/#one-day","text":"A max-age of one day duration is used by default. Note One day max-age for example includes html and other file types.","title":"One day"},{"location":"examples/cache-control-headers/#one-hour","text":"A max-age of one hour is applied only to the following file types. atom, json, rss, xml","title":"One hour"},{"location":"examples/cache-control-headers/#one-year","text":"A max-age of one year is applied only to the following file types. bmp, bz2, css, doc, gif, gz, htc, ico, jpeg, jpg, js, map, mjs, mp3, mp4, ogg, ogv, pdf, png, rar, rtf, tar, tgz, wav, weba, webm, webp, woff, woff2, zip Below an example of how to enable the feature. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cache-control-headers true","title":"One year"},{"location":"examples/compression/","text":"Compression \u00b6 SWS provides Gzip , Deflate and Brotli compression of HTTP responses. The compression functionality is determined by the Accept-Encoding header and is only applied to text-based web file types only. MIME types compressed \u00b6 Only this list of common text-based MIME type files will be compressed either with Gzip , Deflate or Brotli via the Accept-Encoding header value. text/html text/css text/javascript text/xml text/plain text/csv text/calendar text/markdown text/x-yaml text/x-toml text/x-component application/rtf application/xhtml+xml application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml application/vnd.ms-fontobject font/truetype font/opentype image/svg+xml This feature is enabled by default and can be controlled by the boolean -x, --compression option or the equivalent SERVER_COMPRESSION env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --compression true","title":"Compression"},{"location":"examples/compression/#compression","text":"SWS provides Gzip , Deflate and Brotli compression of HTTP responses. The compression functionality is determined by the Accept-Encoding header and is only applied to text-based web file types only.","title":"Compression"},{"location":"examples/compression/#mime-types-compressed","text":"Only this list of common text-based MIME type files will be compressed either with Gzip , Deflate or Brotli via the Accept-Encoding header value. text/html text/css text/javascript text/xml text/plain text/csv text/calendar text/markdown text/x-yaml text/x-toml text/x-component application/rtf application/xhtml+xml application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml application/vnd.ms-fontobject font/truetype font/opentype image/svg+xml This feature is enabled by default and can be controlled by the boolean -x, --compression option or the equivalent SERVER_COMPRESSION env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --compression true","title":"MIME types compressed"},{"location":"examples/cors/","text":"CORS \u00b6 SWS provides optional Cross-Origin Resource Sharing (CORS) support. A list of allowed origin hosts (URLs) should be specified and separated by comas. Or an asterisk (*) can be used in order to allow any host. This feature is disabled by default and can be controlled by the string -c, --cors-allow-origins option or the equivalent SERVER_CORS_ALLOW_ORIGINS env. Below an example of how to enable CORS. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cors-allow-origins \"https://domain.com\" # Or use an asterisk to allow any host # --cors-allow-origins \"*\"","title":"CORS"},{"location":"examples/cors/#cors","text":"SWS provides optional Cross-Origin Resource Sharing (CORS) support. A list of allowed origin hosts (URLs) should be specified and separated by comas. Or an asterisk (*) can be used in order to allow any host. This feature is disabled by default and can be controlled by the string -c, --cors-allow-origins option or the equivalent SERVER_CORS_ALLOW_ORIGINS env. Below an example of how to enable CORS. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cors-allow-origins \"https://domain.com\" # Or use an asterisk to allow any host # --cors-allow-origins \"*\"","title":"CORS"},{"location":"examples/directory-listing/","text":"Directory Listing \u00b6 SWS provides a directory listing feature to display content of directories. This feature is disabled by default and can be controlled by the boolean -z, --directory-listing option or the equivalent SERVER_DIRECTORY_LISTING env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true And here an example of how the directory listing looks like.","title":"Directory Listing"},{"location":"examples/directory-listing/#directory-listing","text":"SWS provides a directory listing feature to display content of directories. This feature is disabled by default and can be controlled by the boolean -z, --directory-listing option or the equivalent SERVER_DIRECTORY_LISTING env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true And here an example of how the directory listing looks like.","title":"Directory Listing"},{"location":"examples/docker/","text":"Docker \u00b6 SWS has first-class Docker support. It provides a Scratch as well as the latest Alpine Linux Docker images. Run a container \u00b6 # Scratch image (just the binary) docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 # Or Alpine image docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2-alpine Dockerfile \u00b6 # Scratch image (just the binary) FROM joseluisq/static-web-server:2 # Or Alpine image FROM joseluisq/static-web-server:2-alpine Docker Compose \u00b6 Below a Docker Compose example using the Traefik Proxy . version : \"3.3\" services : web : image : joseluisq/static-web-server:2 environment : # Note: those envs are customizable but also optional - SERVER_HOST=127.0.0.1 - SERVER_PORT=80 - SERVER_ROOT=/public volumes : - ./some-dir-path:/public labels : - \"traefik.enable=true\" - \"traefik.frontend.entryPoints=https\" - \"traefik.backend=localhost_dev\" - \"traefik.frontend.rule=Host:localhost.dev\" - \"traefik.port=80\" networks : - traefik_net networks : traefik_net : external : true","title":"Docker"},{"location":"examples/docker/#docker","text":"SWS has first-class Docker support. It provides a Scratch as well as the latest Alpine Linux Docker images.","title":"Docker"},{"location":"examples/docker/#run-a-container","text":"# Scratch image (just the binary) docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 # Or Alpine image docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2-alpine","title":"Run a container"},{"location":"examples/docker/#dockerfile","text":"# Scratch image (just the binary) FROM joseluisq/static-web-server:2 # Or Alpine image FROM joseluisq/static-web-server:2-alpine","title":"Dockerfile"},{"location":"examples/docker/#docker-compose","text":"Below a Docker Compose example using the Traefik Proxy . version : \"3.3\" services : web : image : joseluisq/static-web-server:2 environment : # Note: those envs are customizable but also optional - SERVER_HOST=127.0.0.1 - SERVER_PORT=80 - SERVER_ROOT=/public volumes : - ./some-dir-path:/public labels : - \"traefik.enable=true\" - \"traefik.frontend.entryPoints=https\" - \"traefik.backend=localhost_dev\" - \"traefik.frontend.rule=Host:localhost.dev\" - \"traefik.port=80\" networks : - traefik_net networks : traefik_net : external : true","title":"Docker Compose"},{"location":"examples/error-pages/","text":"Error Pages \u00b6 SWS provides custom HTML error pages for the HTTP 404 and 50x status errors. This feature is enabled by default and can be controlled either by the string --page404 ( SERVER_ERROR_PAGE_404 ) or the --page50x ( SERVER_ERROR_PAGE_50X ) arguments. Tip Note that either --page404 and --page50x have defaults (optional values) so they can be specified or omitted as required. Below an example of how to customize those HTLM pages. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --page404 ./my-page-404.html \\ --page50x ./my-page-50x.html","title":"Error Pages"},{"location":"examples/error-pages/#error-pages","text":"SWS provides custom HTML error pages for the HTTP 404 and 50x status errors. This feature is enabled by default and can be controlled either by the string --page404 ( SERVER_ERROR_PAGE_404 ) or the --page50x ( SERVER_ERROR_PAGE_50X ) arguments. Tip Note that either --page404 and --page50x have defaults (optional values) so they can be specified or omitted as required. Below an example of how to customize those HTLM pages. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --page404 ./my-page-404.html \\ --page50x ./my-page-50x.html","title":"Error Pages"},{"location":"examples/file-descriptor-socket-passing/","text":"File Descriptor Socket Passing \u00b6 SWS provides the ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications via systemd (Linux), launchd (Macos) or similar. Tip The Socket Activation model is basically an alternative to TCP port binding. Socket activation is supported by the -f, --fd option or the equivalent SERVER_LISTEN_FD env. If you are using inetd , its \" wait \" option should be used in conjunction with static-web-server's --fd 0 option. Systemd \u00b6 If you're using systemd on Linux, there is a fully working example in the SWS Git repository under the . /systemd directory. Testing \u00b6 Alternatively, the light-weight systemfd utility may be useful especially for testing purposes. For example using systemfd utility as follow: systemfd --no-pid -s http::8091 -- path/to/static-web-server --fd 0","title":"File Descriptor Socket Passing"},{"location":"examples/file-descriptor-socket-passing/#file-descriptor-socket-passing","text":"SWS provides the ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications via systemd (Linux), launchd (Macos) or similar. Tip The Socket Activation model is basically an alternative to TCP port binding. Socket activation is supported by the -f, --fd option or the equivalent SERVER_LISTEN_FD env. If you are using inetd , its \" wait \" option should be used in conjunction with static-web-server's --fd 0 option.","title":"File Descriptor Socket Passing"},{"location":"examples/file-descriptor-socket-passing/#systemd","text":"If you're using systemd on Linux, there is a fully working example in the SWS Git repository under the . /systemd directory.","title":"Systemd"},{"location":"examples/file-descriptor-socket-passing/#testing","text":"Alternatively, the light-weight systemfd utility may be useful especially for testing purposes. For example using systemfd utility as follow: systemfd --no-pid -s http::8091 -- path/to/static-web-server --fd 0","title":"Testing"},{"location":"examples/http1/","text":"HTTP/1 \u00b6 The HTTP/1 is the protocol by default and can be used specifying a host address via the -a, --host ( SERVER_HOST ) argument, the host port via -p, --port ( SERVER_PORT ) and the directory of the static files via -d, --root ( SERVER_ROOT ) argument. Tip Note that either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Below an example of how to run the server using HTTP/1. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir","title":"HTTP/1"},{"location":"examples/http1/#http1","text":"The HTTP/1 is the protocol by default and can be used specifying a host address via the -a, --host ( SERVER_HOST ) argument, the host port via -p, --port ( SERVER_PORT ) and the directory of the static files via -d, --root ( SERVER_ROOT ) argument. Tip Note that either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Below an example of how to run the server using HTTP/1. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir","title":"HTTP/1"},{"location":"examples/http2-tls/","text":"HTTP/2 and TLS \u00b6 SWS provides HTTP/2 protocol and TLS support. This feature is disabled by default and can be activated via the boolean -t, --http2 option as well as string arguments --http2-tls-cert (TLS certificate file path) and --http2-tls-key (private key file path). Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Don't forget to adjust the proper --port value for the HTTP/2 & TLS feature. When this feature is enabled via --http2=true then the security headers are also enabled automatically. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir \\ --http2 true \\ --http2-tls-cert ./my-tls.cert \\ --http2-tls-key ./my-tls.key","title":"HTTP/2 and TLS"},{"location":"examples/http2-tls/#http2-and-tls","text":"SWS provides HTTP/2 protocol and TLS support. This feature is disabled by default and can be activated via the boolean -t, --http2 option as well as string arguments --http2-tls-cert (TLS certificate file path) and --http2-tls-key (private key file path). Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Don't forget to adjust the proper --port value for the HTTP/2 & TLS feature. When this feature is enabled via --http2=true then the security headers are also enabled automatically. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir \\ --http2 true \\ --http2-tls-cert ./my-tls.cert \\ --http2-tls-key ./my-tls.key","title":"HTTP/2 and TLS"},{"location":"examples/logging/","text":"Logging \u00b6 SWS provides logging support just specifying a log level in lower case. The values allowed are error , warn , info , debug and trace . The default value is error . This feature is enabled by default and can be controlled by the string -g, --log-level option or the equivalent SERVER_LOG_LEVEL env. Below an example of how to adjust the log level. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --log-level \"trace\"","title":"Logging"},{"location":"examples/logging/#logging","text":"SWS provides logging support just specifying a log level in lower case. The values allowed are error , warn , info , debug and trace . The default value is error . This feature is enabled by default and can be controlled by the string -g, --log-level option or the equivalent SERVER_LOG_LEVEL env. Below an example of how to adjust the log level. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --log-level \"trace\"","title":"Logging"},{"location":"examples/security-headers/","text":"Security Headers \u00b6 SWS provides several security headers support. When the HTTP/2 feature is activated security headers is enabled automatically. This feature is disabled by default on HTTP/1 and can be controlled by the boolean --security-headers option or the equivalent SERVER_SECURITY_HEADERS env. Headers included \u00b6 The following headers are only included. Strict-Transport-Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age) X-Frame-Options: DENY X-XSS-Protection: 1; mode=block X-Content-Type-Options: nosniff Content-Security-Policy: frame-ancestors","title":"Security Headers"},{"location":"examples/security-headers/#security-headers","text":"SWS provides several security headers support. When the HTTP/2 feature is activated security headers is enabled automatically. This feature is disabled by default on HTTP/1 and can be controlled by the boolean --security-headers option or the equivalent SERVER_SECURITY_HEADERS env.","title":"Security Headers"},{"location":"examples/security-headers/#headers-included","text":"The following headers are only included. Strict-Transport-Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age) X-Frame-Options: DENY X-XSS-Protection: 1; mode=block X-Content-Type-Options: nosniff Content-Security-Policy: frame-ancestors","title":"Headers included"},{"location":"examples/worker-threads/","text":"Worker Threads Customization \u00b6 SWS allows to customize the number of worker threads powered by the Tokio runtime. This feature can be controlled by the numeric -n, --threads-multiplier option or the equivalent SERVER_THREADS_MULTIPLIER env. Worker threads multiplier \u00b6 The value of -n, --threads-multiplier works as multiplier digits in order to determine the number of worker threads used by the server. Basically multipling this input number by the number of system CPUs. The formula used is the following: worker threads = number of CPUs * n Where n is the input value of -n, --threads-multiplier . For example: If there are 4 available CPUs and the --threads-multiplier is 8 then the total of worker threads to use will be 32 . Info When the --threads-multiplier input value is 0 or 1 then one thread per core is used (default value). Warn Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. See Tokio worker_threads API for more details. Below an example of how to adjust the number of worker threads. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ # NOTE: \"8\" gets multiplied by the number of the available cores. --threads-multiplier 8","title":"Worker Threads Customization"},{"location":"examples/worker-threads/#worker-threads-customization","text":"SWS allows to customize the number of worker threads powered by the Tokio runtime. This feature can be controlled by the numeric -n, --threads-multiplier option or the equivalent SERVER_THREADS_MULTIPLIER env.","title":"Worker Threads Customization"},{"location":"examples/worker-threads/#worker-threads-multiplier","text":"The value of -n, --threads-multiplier works as multiplier digits in order to determine the number of worker threads used by the server. Basically multipling this input number by the number of system CPUs. The formula used is the following: worker threads = number of CPUs * n Where n is the input value of -n, --threads-multiplier . For example: If there are 4 available CPUs and the --threads-multiplier is 8 then the total of worker threads to use will be 32 . Info When the --threads-multiplier input value is 0 or 1 then one thread per core is used (default value). Warn Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. See Tokio worker_threads API for more details. Below an example of how to adjust the number of worker threads. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ # NOTE: \"8\" gets multiplied by the number of the available cores. --threads-multiplier 8","title":"Worker threads multiplier"}]}