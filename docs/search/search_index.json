{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Static Web Server A blazing fast and asynchronous web server for static files-serving \u26a1 Overview \u00b6 Static Web Server (or SWS abbreviated) is a very small and fast production-ready web server suitable to serve static web files or assets. It is focused on lightness and easy to use principles but keeping high performance and safety powered by The Rust Programming Language . Written on top of Hyper and Tokio runtime. It provides concurrent and asynchronous networking abilities as well as the latest HTTP/1 - HTTP/2 implementations. It's cross-platform and available for Linux , macOS , Windows and FreeBSD ( x86 / x86_64 , ARM / ARM64 ) as well as Docker . Tips If you're looking for v1 please go to 1.x branch. If you want to migrate from v1 to v2 please take a look at v2.0.0 release. Features \u00b6 Built with Rust which is focused on safety, speed and concurrency . Memory safe and very reduced CPU and RAM overhead. Blazing fast static files-serving and asynchronous powered by latest Hyper , Tokio and a set of awesome crates . Single 4MB (uncompressed) and fully static binary with no dependencies ( Musl libc ). Suitable for running on any Linux distro or Docker container . Optional GZip, Deflate or Brotli compression for text-based web files only. Compression on demand via Accept-Encoding header. Partial Content Delivery support for byte-serving of large files. Optional Cache Control headers for assets. Termination signal handling with graceful shutdown ability and grace period. HTTP/2 + TLS support. Security headers for HTTP/2 by default. HEAD responses. Lightweight and configurable logging via tracing crate. Customizable number of worker threads. Optional directory listing. CORS support. Basic HTTP Authentication. Default and custom error pages. Configurable using CLI arguments or environment variables. First-class Docker support. Scratch and latest Alpine Linux Docker images available. Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Cross-platform. Binaries available for Linux, macOS, Windows & FreeBSD x86_64 / ARM.","title":"Overview"},{"location":"#overview","text":"Static Web Server (or SWS abbreviated) is a very small and fast production-ready web server suitable to serve static web files or assets. It is focused on lightness and easy to use principles but keeping high performance and safety powered by The Rust Programming Language . Written on top of Hyper and Tokio runtime. It provides concurrent and asynchronous networking abilities as well as the latest HTTP/1 - HTTP/2 implementations. It's cross-platform and available for Linux , macOS , Windows and FreeBSD ( x86 / x86_64 , ARM / ARM64 ) as well as Docker . Tips If you're looking for v1 please go to 1.x branch. If you want to migrate from v1 to v2 please take a look at v2.0.0 release.","title":"Overview"},{"location":"#features","text":"Built with Rust which is focused on safety, speed and concurrency . Memory safe and very reduced CPU and RAM overhead. Blazing fast static files-serving and asynchronous powered by latest Hyper , Tokio and a set of awesome crates . Single 4MB (uncompressed) and fully static binary with no dependencies ( Musl libc ). Suitable for running on any Linux distro or Docker container . Optional GZip, Deflate or Brotli compression for text-based web files only. Compression on demand via Accept-Encoding header. Partial Content Delivery support for byte-serving of large files. Optional Cache Control headers for assets. Termination signal handling with graceful shutdown ability and grace period. HTTP/2 + TLS support. Security headers for HTTP/2 by default. HEAD responses. Lightweight and configurable logging via tracing crate. Customizable number of worker threads. Optional directory listing. CORS support. Basic HTTP Authentication. Default and custom error pages. Configurable using CLI arguments or environment variables. First-class Docker support. Scratch and latest Alpine Linux Docker images available. Ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications (E.g systemd ). Cross-platform. Binaries available for Linux, macOS, Windows & FreeBSD x86_64 / ARM.","title":"Features"},{"location":"contributions/","text":"Contributions \u00b6 Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in current work by you, as defined in the Apache License (Version 2.0) license, shall be dual licensed as described below, without any additional terms or conditions. Feel free to send some Pull request or file an issue .","title":"Contributions"},{"location":"contributions/#contributions","text":"Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in current work by you, as defined in the Apache License (Version 2.0) license, shall be dual licensed as described below, without any additional terms or conditions. Feel free to send some Pull request or file an issue .","title":"Contributions"},{"location":"download-and-install/","text":"Download and Install \u00b6 Latest v2.5.0 release 2022-02-04 ( changelog ) Linux 64-bit macOS 64-bit Windows 64-bit FreeBSD 64-bit Installation methods \u00b6 Arch Linux \u00b6 Via Yay or your favorite AUR Helper. yay -S static-web-server-bin MacOS \u00b6 # TODO Windows \u00b6 # TODO Binaries \u00b6 x86_64 \u00b6 static-web-server-v2.5.0-x86_64-apple-darwin.tar.gz SHA256SUM: 02eafd4b659ea992cc33c2552fd62abdedc7c637f36fc91e1bd1fa84510a1781 static-web-server-v2.5.0-x86_64-pc-windows-gnu.zip SHA256SUM: 5b162473ee55d77edb93641340451ee6c9946a0b292f1041189a61487d6c529e static-web-server-v2.5.0-x86_64-pc-windows-msvc.zip SHA256SUM: 90b6705ce6236078d2482f087646a0bee3168eb8fcbb5e1582d7e9bec14ba354 static-web-server-v2.5.0-x86_64-unknown-freebsd.tar.gz SHA256SUM: 4f584ad270f61a116a571fe29ebfa1bda0751d968a6fc702a7839f519f3aee2a static-web-server-v2.5.0-x86_64-unknown-linux-gnu.tar.gz SHA256SUM: 685f33314584407c8055f96c067a2f4d2b0b71680ff432c2baa0e2916f9b47dd static-web-server-v2.5.0-x86_64-unknown-linux-musl.tar.gz SHA256SUM: 65466cff6f58c736b28aa6dfd6df66e721cfbff9134496355115477870d8d009 ARM64 \u00b6 static-web-server-v2.5.0-aarch64-unknown-linux-gnu.tar.gz SHA256SUM: cce0e0700c9584ee21938bfa018bac248fa577180d3bc3a35a52c637e01c80d9 static-web-server-v2.5.0-aarch64-unknown-linux-musl.tar.gz SHA256SUM: 1501d0a8ed5d9ae9d09f85ac143c8c72a856dfd82449f68bde4b74397b7b7a50 static-web-server-v2.5.0-aarch64-apple-darwin.tar.gz SHA256SUM: 3ffda3bb869fa87874d4184b18dfceb0478d262efebdbf2e91d8a9ff6f645f27 x86 \u00b6 static-web-server-v2.5.0-i686-pc-windows-msvc.zip SHA256SUM: 0cec6fff2794dc6ed104be064031f3c74953436903ec4282fcbac4a91ee524e1 static-web-server-v2.5.0-i686-unknown-freebsd.tar.gz SHA256SUM: b20c15d83cd0e1cf3c989b3e08ad7eca5786f6a6732d5761cdfb071d84c63085 static-web-server-v2.5.0-i686-unknown-linux-gnu.tar.gz SHA256SUM: 7a5a38ef0bfc5d1e034b3429d18ccad53dfc39ac0caf7e71d620103a9362c075 static-web-server-v2.5.0-i686-unknown-linux-musl.tar.gz SHA256SUM: 502aae84ec49cefa189af9986beccd7994bd8bd06cddd35dfa4c81d6c98a500a ARM \u00b6 static-web-server-v2.5.0-arm-unknown-linux-gnueabihf.tar.gz SHA256SUM: 1b9e5d1f2d1e5ccfef74374521d2e2659c1e8f04becfccdb3bafb25941ef02a1 All Releases \u00b6 See all available releases .","title":"Download and Install"},{"location":"download-and-install/#download-and-install","text":"Latest v2.5.0 release 2022-02-04 ( changelog ) Linux 64-bit macOS 64-bit Windows 64-bit FreeBSD 64-bit","title":"Download and Install"},{"location":"download-and-install/#installation-methods","text":"","title":"Installation methods"},{"location":"download-and-install/#arch-linux","text":"Via Yay or your favorite AUR Helper. yay -S static-web-server-bin","title":"Arch Linux"},{"location":"download-and-install/#macos","text":"# TODO","title":"MacOS"},{"location":"download-and-install/#windows","text":"# TODO","title":"Windows"},{"location":"download-and-install/#binaries","text":"","title":"Binaries"},{"location":"download-and-install/#x86_64","text":"static-web-server-v2.5.0-x86_64-apple-darwin.tar.gz SHA256SUM: 02eafd4b659ea992cc33c2552fd62abdedc7c637f36fc91e1bd1fa84510a1781 static-web-server-v2.5.0-x86_64-pc-windows-gnu.zip SHA256SUM: 5b162473ee55d77edb93641340451ee6c9946a0b292f1041189a61487d6c529e static-web-server-v2.5.0-x86_64-pc-windows-msvc.zip SHA256SUM: 90b6705ce6236078d2482f087646a0bee3168eb8fcbb5e1582d7e9bec14ba354 static-web-server-v2.5.0-x86_64-unknown-freebsd.tar.gz SHA256SUM: 4f584ad270f61a116a571fe29ebfa1bda0751d968a6fc702a7839f519f3aee2a static-web-server-v2.5.0-x86_64-unknown-linux-gnu.tar.gz SHA256SUM: 685f33314584407c8055f96c067a2f4d2b0b71680ff432c2baa0e2916f9b47dd static-web-server-v2.5.0-x86_64-unknown-linux-musl.tar.gz SHA256SUM: 65466cff6f58c736b28aa6dfd6df66e721cfbff9134496355115477870d8d009","title":"x86_64"},{"location":"download-and-install/#arm64","text":"static-web-server-v2.5.0-aarch64-unknown-linux-gnu.tar.gz SHA256SUM: cce0e0700c9584ee21938bfa018bac248fa577180d3bc3a35a52c637e01c80d9 static-web-server-v2.5.0-aarch64-unknown-linux-musl.tar.gz SHA256SUM: 1501d0a8ed5d9ae9d09f85ac143c8c72a856dfd82449f68bde4b74397b7b7a50 static-web-server-v2.5.0-aarch64-apple-darwin.tar.gz SHA256SUM: 3ffda3bb869fa87874d4184b18dfceb0478d262efebdbf2e91d8a9ff6f645f27","title":"ARM64"},{"location":"download-and-install/#x86","text":"static-web-server-v2.5.0-i686-pc-windows-msvc.zip SHA256SUM: 0cec6fff2794dc6ed104be064031f3c74953436903ec4282fcbac4a91ee524e1 static-web-server-v2.5.0-i686-unknown-freebsd.tar.gz SHA256SUM: b20c15d83cd0e1cf3c989b3e08ad7eca5786f6a6732d5761cdfb071d84c63085 static-web-server-v2.5.0-i686-unknown-linux-gnu.tar.gz SHA256SUM: 7a5a38ef0bfc5d1e034b3429d18ccad53dfc39ac0caf7e71d620103a9362c075 static-web-server-v2.5.0-i686-unknown-linux-musl.tar.gz SHA256SUM: 502aae84ec49cefa189af9986beccd7994bd8bd06cddd35dfa4c81d6c98a500a","title":"x86"},{"location":"download-and-install/#arm","text":"static-web-server-v2.5.0-arm-unknown-linux-gnueabihf.tar.gz SHA256SUM: 1b9e5d1f2d1e5ccfef74374521d2e2659c1e8f04becfccdb3bafb25941ef02a1","title":"ARM"},{"location":"download-and-install/#all-releases","text":"See all available releases .","title":"All Releases"},{"location":"getting-started/","text":"Getting Started \u00b6 Download and install the binary for your specific platform and then just type static-web-server --port 8787 --root ./my-public-dir Or if you use Docker just try docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 Docker Tip You can specify a Docker volume like -v $HOME/my-public-dir:/public in order to overwrite the default root directory. See Docker examples . To see the available options type static-web-server -h or go to the Command-line arguments section. Or if you are looking for more advanced examples then have a look at the features section.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"Download and install the binary for your specific platform and then just type static-web-server --port 8787 --root ./my-public-dir Or if you use Docker just try docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 Docker Tip You can specify a Docker volume like -v $HOME/my-public-dir:/public in order to overwrite the default root directory. See Docker examples . To see the available options type static-web-server -h or go to the Command-line arguments section. Or if you are looking for more advanced examples then have a look at the features section.","title":"Getting Started"},{"location":"license/","text":"License \u00b6 This work is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0) . \u00a9 2019-present Jose Quintana","title":"License"},{"location":"license/#license","text":"This work is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0) . \u00a9 2019-present Jose Quintana","title":"License"},{"location":"migration/","text":"Migrating from v1 to v2 \u00b6 The v2 introduces notable changes including new features, performance improvements and new targets support like ARM64 and OSes like FreeBSD. This version v2 was re-written almost from scratch on top of Hyper and Tokio runtime which give us the Rust asynchronous ability by default and latest HTTP/1 - HTTP/2 implementation improvements. However it still try to keep the same principles of its v1 : lightness and easy to use. Therefore a migration should not be a big deal. v2 breaking changes \u00b6 This major v2 has few breaking changes. However a migration should not represent a problem. Tip It is always worth recommending that you test a major server version upgrade like this first with your application(s) in a development environment or similar. Please have in mind the following changes in v2 : The server now supports only a root directory path (via --root or its equivalent env) so an assets path option is no longer required. Cache control headers are applied to assets in an arbitrary manner. See control headers examples for more details. OpenSSL TLS for HTTP/1 is no longer supported, instead for the HTTP/2 & TLS (via --http2 option) the server uses h2 which is on top of Rustls . It means that instead of using a .p12 or .pfx file you can now use only a certificate file along with its private key. See HTTP/2 & TLS examples for more details. The rest of known options are equivalent to v1 (except the new ones of course).","title":"Migration from v1 to v2"},{"location":"migration/#migrating-from-v1-to-v2","text":"The v2 introduces notable changes including new features, performance improvements and new targets support like ARM64 and OSes like FreeBSD. This version v2 was re-written almost from scratch on top of Hyper and Tokio runtime which give us the Rust asynchronous ability by default and latest HTTP/1 - HTTP/2 implementation improvements. However it still try to keep the same principles of its v1 : lightness and easy to use. Therefore a migration should not be a big deal.","title":"Migrating from v1 to v2"},{"location":"migration/#v2-breaking-changes","text":"This major v2 has few breaking changes. However a migration should not represent a problem. Tip It is always worth recommending that you test a major server version upgrade like this first with your application(s) in a development environment or similar. Please have in mind the following changes in v2 : The server now supports only a root directory path (via --root or its equivalent env) so an assets path option is no longer required. Cache control headers are applied to assets in an arbitrary manner. See control headers examples for more details. OpenSSL TLS for HTTP/1 is no longer supported, instead for the HTTP/2 & TLS (via --http2 option) the server uses h2 which is on top of Rustls . It means that instead of using a .p12 or .pfx file you can now use only a certificate file along with its private key. See HTTP/2 & TLS examples for more details. The rest of known options are equivalent to v1 (except the new ones of course).","title":"v2 breaking changes"},{"location":"platforms-architectures/","text":"Platforms & Architectures \u00b6 Currently only the following platforms/architectures are supported. Docker For Docker images supported list see Docker OS/Arch . Linux \u00b6 x86 \u00b6 i686-unknown-linux-gnu i686-unknown-linux-musl x86_64 \u00b6 x86_64-unknown-linux-gnu x86_64-unknown-linux-musl ARM \u00b6 arm-unknown-linux-gnueabihf (armv6) arm-unknown-linux-musleabihf (armv6) armv7-unknown-linux-musleabihf (armv7) ARM64 \u00b6 aarch64-unknown-linux-musl aarch64-unknown-linux-gnu macOS \u00b6 x86_64 \u00b6 x86_64-apple-darwin ARM64 \u00b6 aarch64-apple-darwin Windows \u00b6 x86 \u00b6 i686-pc-windows-msvc x86_64 \u00b6 x86_64-pc-windows-msvc x86_64-pc-windows-gnu ARM64 \u00b6 aarch64-pc-windows-msvc (temporarily disabled until briansmith/ring#1167 ) FreeBSD \u00b6 x86 \u00b6 i686-unknown-freebsd x86_64 \u00b6 x86_64-unknown-freebsd","title":"Platforms & Architectures"},{"location":"platforms-architectures/#platforms-architectures","text":"Currently only the following platforms/architectures are supported. Docker For Docker images supported list see Docker OS/Arch .","title":"Platforms &amp; Architectures"},{"location":"platforms-architectures/#linux","text":"","title":"Linux"},{"location":"platforms-architectures/#x86","text":"i686-unknown-linux-gnu i686-unknown-linux-musl","title":"x86"},{"location":"platforms-architectures/#x86_64","text":"x86_64-unknown-linux-gnu x86_64-unknown-linux-musl","title":"x86_64"},{"location":"platforms-architectures/#arm","text":"arm-unknown-linux-gnueabihf (armv6) arm-unknown-linux-musleabihf (armv6) armv7-unknown-linux-musleabihf (armv7)","title":"ARM"},{"location":"platforms-architectures/#arm64","text":"aarch64-unknown-linux-musl aarch64-unknown-linux-gnu","title":"ARM64"},{"location":"platforms-architectures/#macos","text":"","title":"macOS"},{"location":"platforms-architectures/#x86_65","text":"x86_64-apple-darwin","title":"x86_64"},{"location":"platforms-architectures/#arm64_1","text":"aarch64-apple-darwin","title":"ARM64"},{"location":"platforms-architectures/#windows","text":"","title":"Windows"},{"location":"platforms-architectures/#x86_1","text":"i686-pc-windows-msvc","title":"x86"},{"location":"platforms-architectures/#x86_66","text":"x86_64-pc-windows-msvc x86_64-pc-windows-gnu","title":"x86_64"},{"location":"platforms-architectures/#arm64_2","text":"aarch64-pc-windows-msvc (temporarily disabled until briansmith/ring#1167 )","title":"ARM64"},{"location":"platforms-architectures/#freebsd","text":"","title":"FreeBSD"},{"location":"platforms-architectures/#x86_2","text":"i686-unknown-freebsd","title":"x86"},{"location":"platforms-architectures/#x86_67","text":"x86_64-unknown-freebsd","title":"x86_64"},{"location":"semantic-versioning/","text":"Semantic Versioning \u00b6 SWS project adheres to Semantic Versioning for every release like v1 and latest v2 . Breaking changes \u00b6 Only switches between major versions \"could\" contain breaking changes or not depending on the particular case. However this project try to keep away of any kind of breaking change as possible between major versions. But it still supports and prioritizes \"no breaking changes\" for minor and patch (bug fixes) versions. In the other hand, if a breaking change is found to be \"strictly necessary\" to do. Then a new major version must be promoted as well as users informed accordingly in order they can do a seamlessly transition.","title":"Semantic Versioning"},{"location":"semantic-versioning/#semantic-versioning","text":"SWS project adheres to Semantic Versioning for every release like v1 and latest v2 .","title":"Semantic Versioning"},{"location":"semantic-versioning/#breaking-changes","text":"Only switches between major versions \"could\" contain breaking changes or not depending on the particular case. However this project try to keep away of any kind of breaking change as possible between major versions. But it still supports and prioritizes \"no breaking changes\" for minor and patch (bug fixes) versions. In the other hand, if a breaking change is found to be \"strictly necessary\" to do. Then a new major version must be promoted as well as users informed accordingly in order they can do a seamlessly transition.","title":"Breaking changes"},{"location":"configuration/command-line-arguments/","text":"Command-Line Arguments \u00b6 The server can be configured via the following command-line arguments. Remember Command-line arguments are equivalent to their environment variables . Command-line arguments take precedence over their equivalent environment variables. $ static-web-server -h static-web-server 2.5.0 Jose Quintana <https://git.io/joseluisq> A blazing fast and asynchronous web server for static files-serving. USAGE: static-web-server [OPTIONS] FLAGS: -h, --help Prints help information -V, --version Prints version information OPTIONS: --basic-auth <basic-auth> It provides The \"Basic\" HTTP Authentication scheme using credentials as \"user-id:password\" pairs. Password must be encoded using the \"BCrypt\" password-hashing function [env: SERVER_BASIC_AUTH=] [default: ] -e, --cache-control-headers <cache-control-headers> Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on `src/control_headers.rs` file [env: SERVER_CACHE_CONTROL_HEADERS=] [default: true] -x, --compression <compression> Gzip, Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text- based web file types only [env: SERVER_COMPRESSION=] [default: true] -c, --cors-allow-origins <cors-allow-origins> Specify an optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host [env: SERVER_CORS_ALLOW_ORIGINS=] [default: ] -z, --directory-listing <directory-listing> Enable directory listing for all requests ending with the slash character (\u2018/\u2019) [env: SERVER_DIRECTORY_LISTING=] [default: false] --directory-listing-order <directory-listing-order> Specify a default code number to order directory listing entries per `Name`, `Last modified` or `Size` attributes (columns). Code numbers supported: 0 (Name asc), 1 (Name desc), 2 (Last modified asc), 3 (Last modified desc), 4 (Size asc), 5 (Size desc). Default 6 (unordered) [env: SERVER_DIRECTORY_LISTING_ORDER=] [default: 6] -f, --fd <fd> Instead of binding to a TCP port, accept incoming connections to an already-bound TCP socket listener on the specified file descriptor number (usually zero). Requires that the parent process (e.g. inetd, launchd, or systemd) binds an address and port on behalf of static-web-server, before arranging for the resulting file descriptor to be inherited by static-web-server. Cannot be used in conjunction with the port and host arguments. The included systemd unit file utilises this feature to increase security by allowing the static- web-server to be sandboxed more completely [env: SERVER_LISTEN_FD=] -q, --grace-period <grace-period> Defines a grace period in seconds after a `SIGTERM` signal is caught which will delay the server before to shut it down gracefully. The maximum value is 255 seconds [env: SERVER_GRACE_PERIOD=] [default: 0] -a, --host <host> Host address (E.g 127.0.0.1 or ::1) [env: SERVER_HOST=] [default: ::] -t, --http2 <http2> Enable HTTP/2 with TLS support [env: SERVER_HTTP2_TLS=] [default: false] --http2-tls-cert <http2-tls-cert> Specify the file path to read the certificate [env: SERVER_HTTP2_TLS_CERT=] [default: ] --http2-tls-key <http2-tls-key> Specify the file path to read the private key [env: SERVER_HTTP2_TLS_KEY=] [default: ] -g, --log-level <log-level> Specify a logging level in lower case. Values: error, warn, info, debug or trace [env: SERVER_LOG_LEVEL=] [default: error] --page404 <page404> HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] -p, --port <port> Host port [env: SERVER_PORT=] [default: 80] -d, --root <root> Root directory path of static files [env: SERVER_ROOT=] [default: ./public] --security-headers <security-headers> Enable security headers by default when HTTP/2 feature is activated. Headers included: \"Strict-Transport- Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age), \"X-Frame- Options: DENY\", \"X-XSS-Protection: 1; mode=block\" and \"Content-Security-Policy: frame-ancestors 'self'\" [env: SERVER_SECURITY_HEADERS=] [default: false] -n, --threads-multiplier <threads-multiplier> Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: `worker threads = number of CPUs * n` where `n` is the value that changes here. When multiplier value is 0 or 1 then one thread per core is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side [env: SERVER_THREADS_MULTIPLIER=] [default: 1]","title":"Command Line Arguments"},{"location":"configuration/command-line-arguments/#command-line-arguments","text":"The server can be configured via the following command-line arguments. Remember Command-line arguments are equivalent to their environment variables . Command-line arguments take precedence over their equivalent environment variables. $ static-web-server -h static-web-server 2.5.0 Jose Quintana <https://git.io/joseluisq> A blazing fast and asynchronous web server for static files-serving. USAGE: static-web-server [OPTIONS] FLAGS: -h, --help Prints help information -V, --version Prints version information OPTIONS: --basic-auth <basic-auth> It provides The \"Basic\" HTTP Authentication scheme using credentials as \"user-id:password\" pairs. Password must be encoded using the \"BCrypt\" password-hashing function [env: SERVER_BASIC_AUTH=] [default: ] -e, --cache-control-headers <cache-control-headers> Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on `src/control_headers.rs` file [env: SERVER_CACHE_CONTROL_HEADERS=] [default: true] -x, --compression <compression> Gzip, Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text- based web file types only [env: SERVER_COMPRESSION=] [default: true] -c, --cors-allow-origins <cors-allow-origins> Specify an optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host [env: SERVER_CORS_ALLOW_ORIGINS=] [default: ] -z, --directory-listing <directory-listing> Enable directory listing for all requests ending with the slash character (\u2018/\u2019) [env: SERVER_DIRECTORY_LISTING=] [default: false] --directory-listing-order <directory-listing-order> Specify a default code number to order directory listing entries per `Name`, `Last modified` or `Size` attributes (columns). Code numbers supported: 0 (Name asc), 1 (Name desc), 2 (Last modified asc), 3 (Last modified desc), 4 (Size asc), 5 (Size desc). Default 6 (unordered) [env: SERVER_DIRECTORY_LISTING_ORDER=] [default: 6] -f, --fd <fd> Instead of binding to a TCP port, accept incoming connections to an already-bound TCP socket listener on the specified file descriptor number (usually zero). Requires that the parent process (e.g. inetd, launchd, or systemd) binds an address and port on behalf of static-web-server, before arranging for the resulting file descriptor to be inherited by static-web-server. Cannot be used in conjunction with the port and host arguments. The included systemd unit file utilises this feature to increase security by allowing the static- web-server to be sandboxed more completely [env: SERVER_LISTEN_FD=] -q, --grace-period <grace-period> Defines a grace period in seconds after a `SIGTERM` signal is caught which will delay the server before to shut it down gracefully. The maximum value is 255 seconds [env: SERVER_GRACE_PERIOD=] [default: 0] -a, --host <host> Host address (E.g 127.0.0.1 or ::1) [env: SERVER_HOST=] [default: ::] -t, --http2 <http2> Enable HTTP/2 with TLS support [env: SERVER_HTTP2_TLS=] [default: false] --http2-tls-cert <http2-tls-cert> Specify the file path to read the certificate [env: SERVER_HTTP2_TLS_CERT=] [default: ] --http2-tls-key <http2-tls-key> Specify the file path to read the private key [env: SERVER_HTTP2_TLS_KEY=] [default: ] -g, --log-level <log-level> Specify a logging level in lower case. Values: error, warn, info, debug or trace [env: SERVER_LOG_LEVEL=] [default: error] --page404 <page404> HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_404=] [default: ./public/404.html] --page50x <page50x> HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message [env: SERVER_ERROR_PAGE_50X=] [default: ./public/50x.html] -p, --port <port> Host port [env: SERVER_PORT=] [default: 80] -d, --root <root> Root directory path of static files [env: SERVER_ROOT=] [default: ./public] --security-headers <security-headers> Enable security headers by default when HTTP/2 feature is activated. Headers included: \"Strict-Transport- Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age), \"X-Frame- Options: DENY\", \"X-XSS-Protection: 1; mode=block\" and \"Content-Security-Policy: frame-ancestors 'self'\" [env: SERVER_SECURITY_HEADERS=] [default: false] -n, --threads-multiplier <threads-multiplier> Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: `worker threads = number of CPUs * n` where `n` is the value that changes here. When multiplier value is 0 or 1 then one thread per core is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side [env: SERVER_THREADS_MULTIPLIER=] [default: 1]","title":"Command-Line Arguments"},{"location":"configuration/environment-variables/","text":"Environment Variables \u00b6 The server can be configured via the following environment variables. Remember Environment variables are equivalent to their command-line arguments. Command line arguments take precedence over their equivalent environment variables. SERVER_HOST \u00b6 The address of the host (E.g 127.0.0.1). Default [::] . SERVER_PORT \u00b6 The port of the host. Default 80 . SERVER_LISTEN_FD \u00b6 Optional file descriptor number (e.g. 0 ) to inherit an already-opened TCP listener on (instead of using SERVER_HOST and/or SERVER_PORT ). Default empty (disabled). SERVER_ROOT \u00b6 Relative or absolute root directory path of static files. Default ./public . SERVER_GRACE_PERIOD \u00b6 Defines a grace period in seconds after a SIGTERM signal is caught which will delay the server before to shut it down gracefully. The maximum value is 255 seconds. Default value is 0 (no delay). SERVER_LOG_LEVEL \u00b6 Specify a logging level in lower case. Possible values are error , warn , info , debug or trace . Default error . SERVER_ERROR_PAGE_404 \u00b6 HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/404.html . SERVER_ERROR_PAGE_50X \u00b6 HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/50x.html SERVER_THREADS_MULTIPLIER \u00b6 Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: worker threads = number of CPUs * n where n is the value that changes here. When multiplier value is 0 or 1 then the number of CPUs is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. Default one thread per core. SERVER_HTTP2_TLS \u00b6 Enable HTTP/2 with TLS support. Make sure also to adjust current server port. Default false (disabled). SERVER_HTTP2_TLS_CERT \u00b6 Specify the file path to read the certificate. Default empty (disabled). SERVER_HTTP2_TLS_KEY \u00b6 Specify the file path to read the private key. Default empty (disabled). SERVER_CORS_ALLOW_ORIGINS \u00b6 Specify a optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host. Default empty (disabled). SERVER_COMPRESSION \u00b6 Gzip , Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text-based web file types only. See ad-hoc mime-type list . Default true (enabled). SERVER_DIRECTORY_LISTING \u00b6 Enable directory listing for all requests ending with the slash character (\u2018/\u2019). Default false (disabled). SERVER_DIRECTORY_LISTING_ORDER \u00b6 Specify a default code number to order directory listing entries per Name , Last modified or Size attributes (columns). Code numbers supported: 0 (Name asc), 1 (Name desc), 2 (Last modified asc), 3 (Last modified desc), 4 (Size asc), 5 (Size desc). Default 6 (unordered). SERVER_SECURITY_HEADERS \u00b6 Enable security headers by default when HTTP/2 feature is activated. Headers included: Strict-Transport-Security: max-age=63072000; includeSubDomains; preload (2 years max-age), X-Frame-Options: DENY , X-XSS-Protection: 1; mode=block and Content-Security-Policy: frame-ancestors 'self' . Default false (disabled). SERVER_CACHE_CONTROL_HEADERS \u00b6 Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on src/control_headers.rs file. Default true (enabled). SERVER_BASIC_AUTH \u00b6 It provides The \"Basic\" HTTP Authentication Scheme using credentials as user-id:password pairs, encoded using Base64 . Password must be encoded using the BCrypt password-hashing function. Default empty (disabled).","title":"Environment Variables"},{"location":"configuration/environment-variables/#environment-variables","text":"The server can be configured via the following environment variables. Remember Environment variables are equivalent to their command-line arguments. Command line arguments take precedence over their equivalent environment variables.","title":"Environment Variables"},{"location":"configuration/environment-variables/#server_host","text":"The address of the host (E.g 127.0.0.1). Default [::] .","title":"SERVER_HOST"},{"location":"configuration/environment-variables/#server_port","text":"The port of the host. Default 80 .","title":"SERVER_PORT"},{"location":"configuration/environment-variables/#server_listen_fd","text":"Optional file descriptor number (e.g. 0 ) to inherit an already-opened TCP listener on (instead of using SERVER_HOST and/or SERVER_PORT ). Default empty (disabled).","title":"SERVER_LISTEN_FD"},{"location":"configuration/environment-variables/#server_root","text":"Relative or absolute root directory path of static files. Default ./public .","title":"SERVER_ROOT"},{"location":"configuration/environment-variables/#server_grace_period","text":"Defines a grace period in seconds after a SIGTERM signal is caught which will delay the server before to shut it down gracefully. The maximum value is 255 seconds. Default value is 0 (no delay).","title":"SERVER_GRACE_PERIOD"},{"location":"configuration/environment-variables/#server_log_level","text":"Specify a logging level in lower case. Possible values are error , warn , info , debug or trace . Default error .","title":"SERVER_LOG_LEVEL"},{"location":"configuration/environment-variables/#server_error_page_404","text":"HTML file path for 404 errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/404.html .","title":"SERVER_ERROR_PAGE_404"},{"location":"configuration/environment-variables/#server_error_page_50x","text":"HTML file path for 50x errors. If path is not specified or simply don't exists then server will use a generic HTML error message. Default ./public/50x.html","title":"SERVER_ERROR_PAGE_50X"},{"location":"configuration/environment-variables/#server_threads_multiplier","text":"Number of worker threads multiplier that'll be multiplied by the number of system CPUs using the formula: worker threads = number of CPUs * n where n is the value that changes here. When multiplier value is 0 or 1 then the number of CPUs is used. Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. Default one thread per core.","title":"SERVER_THREADS_MULTIPLIER"},{"location":"configuration/environment-variables/#server_http2_tls","text":"Enable HTTP/2 with TLS support. Make sure also to adjust current server port. Default false (disabled).","title":"SERVER_HTTP2_TLS"},{"location":"configuration/environment-variables/#server_http2_tls_cert","text":"Specify the file path to read the certificate. Default empty (disabled).","title":"SERVER_HTTP2_TLS_CERT"},{"location":"configuration/environment-variables/#server_http2_tls_key","text":"Specify the file path to read the private key. Default empty (disabled).","title":"SERVER_HTTP2_TLS_KEY"},{"location":"configuration/environment-variables/#server_cors_allow_origins","text":"Specify a optional CORS list of allowed origin hosts separated by comas. Host ports or protocols aren't being checked. Use an asterisk (*) to allow any host. Default empty (disabled).","title":"SERVER_CORS_ALLOW_ORIGINS"},{"location":"configuration/environment-variables/#server_compression","text":"Gzip , Deflate or Brotli compression on demand determined by the Accept-Encoding header and applied to text-based web file types only. See ad-hoc mime-type list . Default true (enabled).","title":"SERVER_COMPRESSION"},{"location":"configuration/environment-variables/#server_directory_listing","text":"Enable directory listing for all requests ending with the slash character (\u2018/\u2019). Default false (disabled).","title":"SERVER_DIRECTORY_LISTING"},{"location":"configuration/environment-variables/#server_directory_listing_order","text":"Specify a default code number to order directory listing entries per Name , Last modified or Size attributes (columns). Code numbers supported: 0 (Name asc), 1 (Name desc), 2 (Last modified asc), 3 (Last modified desc), 4 (Size asc), 5 (Size desc). Default 6 (unordered).","title":"SERVER_DIRECTORY_LISTING_ORDER"},{"location":"configuration/environment-variables/#server_security_headers","text":"Enable security headers by default when HTTP/2 feature is activated. Headers included: Strict-Transport-Security: max-age=63072000; includeSubDomains; preload (2 years max-age), X-Frame-Options: DENY , X-XSS-Protection: 1; mode=block and Content-Security-Policy: frame-ancestors 'self' . Default false (disabled).","title":"SERVER_SECURITY_HEADERS"},{"location":"configuration/environment-variables/#server_cache_control_headers","text":"Enable cache control headers for incoming requests based on a set of file types. The file type list can be found on src/control_headers.rs file. Default true (enabled).","title":"SERVER_CACHE_CONTROL_HEADERS"},{"location":"configuration/environment-variables/#server_basic_auth","text":"It provides The \"Basic\" HTTP Authentication Scheme using credentials as user-id:password pairs, encoded using Base64 . Password must be encoded using the BCrypt password-hashing function. Default empty (disabled).","title":"SERVER_BASIC_AUTH"},{"location":"features/basic-authentication/","text":"Basic HTTP Authentication \u00b6 SWS provides \"Basic\" HTTP Authentication Scheme using a user-id/password pairs encoded with Base64 . This feature is disabled by default and can be controlled by the string --basic-auth option or the equivalent SERVER_BASIC_AUTH env. First, create a user-id/password pair using your favourite tool. Note Only the password must be encoded using the BCrypt password-hashing function. In this example we are using the Apache htpasswd tool. htpasswd -nbBC5 \"username\" \"password\" # username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK Tip The password verification happens at runtime but its verification speed depends on the computing time cost of bcrypt algorithm used. For example the htpasswd tool supports a -C argument in order to adjust the bcrypt 's computing time. Using a higher value is more secure but slower. The default values is 5 and the possible values are ranging from 4 to 17 . Finally assign the credentails and run the server. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --basic-auth 'username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK'","title":"Basic Authentication"},{"location":"features/basic-authentication/#basic-http-authentication","text":"SWS provides \"Basic\" HTTP Authentication Scheme using a user-id/password pairs encoded with Base64 . This feature is disabled by default and can be controlled by the string --basic-auth option or the equivalent SERVER_BASIC_AUTH env. First, create a user-id/password pair using your favourite tool. Note Only the password must be encoded using the BCrypt password-hashing function. In this example we are using the Apache htpasswd tool. htpasswd -nbBC5 \"username\" \"password\" # username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK Tip The password verification happens at runtime but its verification speed depends on the computing time cost of bcrypt algorithm used. For example the htpasswd tool supports a -C argument in order to adjust the bcrypt 's computing time. Using a higher value is more secure but slower. The default values is 5 and the possible values are ranging from 4 to 17 . Finally assign the credentails and run the server. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --basic-auth 'username:$2y$05$KYOM0uaMQnEknnu/ckcCuuFyNQbc8BJEUk5X.ixtoCQpjXsc4geHK'","title":"Basic HTTP Authentication"},{"location":"features/cache-control-headers/","text":"Cache Control Headers \u00b6 SWS provides support for arbitrary Cache-Control HTTP header specifying a public and max-age response directives. This feature is enabled by default and can be controlled by the boolean -e, --cache-control-headers option or the equivalent SERVER_CACHE_CONTROL_HEADERS env. Cache-Control Max-Age \u00b6 Control headers are applied only to the following file types with the corresponding max-age values. One day \u00b6 A max-age of one day duration is used by default. Note One day max-age for example includes html and other file types. One hour \u00b6 A max-age of one hour is applied only to the following file types. atom, json, rss, xml One year \u00b6 A max-age of one year is applied only to the following file types. bmp, bz2, css, doc, gif, gz, htc, ico, jpeg, jpg, js, map, mjs, mp3, mp4, ogg, ogv, pdf, png, rar, rtf, tar, tgz, wav, weba, webm, webp, woff, woff2, zip Below an example of how to enable the feature. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cache-control-headers true","title":"Cache Control Headers"},{"location":"features/cache-control-headers/#cache-control-headers","text":"SWS provides support for arbitrary Cache-Control HTTP header specifying a public and max-age response directives. This feature is enabled by default and can be controlled by the boolean -e, --cache-control-headers option or the equivalent SERVER_CACHE_CONTROL_HEADERS env.","title":"Cache Control Headers"},{"location":"features/cache-control-headers/#cache-control-max-age","text":"Control headers are applied only to the following file types with the corresponding max-age values.","title":"Cache-Control Max-Age"},{"location":"features/cache-control-headers/#one-day","text":"A max-age of one day duration is used by default. Note One day max-age for example includes html and other file types.","title":"One day"},{"location":"features/cache-control-headers/#one-hour","text":"A max-age of one hour is applied only to the following file types. atom, json, rss, xml","title":"One hour"},{"location":"features/cache-control-headers/#one-year","text":"A max-age of one year is applied only to the following file types. bmp, bz2, css, doc, gif, gz, htc, ico, jpeg, jpg, js, map, mjs, mp3, mp4, ogg, ogv, pdf, png, rar, rtf, tar, tgz, wav, weba, webm, webp, woff, woff2, zip Below an example of how to enable the feature. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cache-control-headers true","title":"One year"},{"location":"features/compression/","text":"Compression \u00b6 SWS provides Gzip , Deflate and Brotli compression of HTTP responses. The compression functionality is determined by the Accept-Encoding header and is only applied to text-based web file types only. MIME types compressed \u00b6 Only this list of common text-based MIME type files will be compressed either with Gzip , Deflate or Brotli via the Accept-Encoding header value. text/html text/css text/javascript text/xml text/plain text/csv text/calendar text/markdown text/x-yaml text/x-toml text/x-component application/rtf application/xhtml+xml application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml application/vnd.ms-fontobject font/truetype font/opentype image/svg+xml application/wasm This feature is enabled by default and can be controlled by the boolean -x, --compression option or the equivalent SERVER_COMPRESSION env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --compression true","title":"Compression"},{"location":"features/compression/#compression","text":"SWS provides Gzip , Deflate and Brotli compression of HTTP responses. The compression functionality is determined by the Accept-Encoding header and is only applied to text-based web file types only.","title":"Compression"},{"location":"features/compression/#mime-types-compressed","text":"Only this list of common text-based MIME type files will be compressed either with Gzip , Deflate or Brotli via the Accept-Encoding header value. text/html text/css text/javascript text/xml text/plain text/csv text/calendar text/markdown text/x-yaml text/x-toml text/x-component application/rtf application/xhtml+xml application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml application/vnd.ms-fontobject font/truetype font/opentype image/svg+xml application/wasm This feature is enabled by default and can be controlled by the boolean -x, --compression option or the equivalent SERVER_COMPRESSION env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --compression true","title":"MIME types compressed"},{"location":"features/cors/","text":"CORS \u00b6 SWS provides optional Cross-Origin Resource Sharing (CORS) support. A list of allowed origin hosts (URLs) should be specified and separated by comas. Or an asterisk (*) can be used in order to allow any host. This feature is disabled by default and can be controlled by the string -c, --cors-allow-origins option or the equivalent SERVER_CORS_ALLOW_ORIGINS env. Below an example of how to enable CORS. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cors-allow-origins \"https://domain.com\" # Or use an asterisk to allow any host # --cors-allow-origins \"*\"","title":"CORS"},{"location":"features/cors/#cors","text":"SWS provides optional Cross-Origin Resource Sharing (CORS) support. A list of allowed origin hosts (URLs) should be specified and separated by comas. Or an asterisk (*) can be used in order to allow any host. This feature is disabled by default and can be controlled by the string -c, --cors-allow-origins option or the equivalent SERVER_CORS_ALLOW_ORIGINS env. Below an example of how to enable CORS. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --cors-allow-origins \"https://domain.com\" # Or use an asterisk to allow any host # --cors-allow-origins \"*\"","title":"CORS"},{"location":"features/directory-listing/","text":"Directory Listing \u00b6 SWS provides a directory listing feature to display content of directories. This feature is disabled by default and can be controlled by the boolean -z, --directory-listing option or the equivalent SERVER_DIRECTORY_LISTING env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true And here an example of how the directory listing looks like. Sorting \u00b6 Sorting by Name , Last modified and Size is enabled as clickable columns when directory listing is activated via the --directory-listing=true option. You can also use the sort query parameter to sort manually by certain attribute from URI. E.g https://localhost/?sort=5 . Sorting by default \u00b6 Some times one wants to sort by certain attribute but by default . In that case default ascending or descending ordering of files/dirs by their attributes is provided by the numeric --directory-listing-order option or the equivalent SERVER_DIRECTORY_LISTING_ORDER env. To do so you have to pass a code sorting number . E.g --directory-listing-order=2 . Code numbers for sorting \u00b6 Below the possible number code values for sorting/ordering which are grouped by attribute. Name \u00b6 0 : Ascending 1 : Descending Last modified \u00b6 2 : Ascending 3 : Descending Size \u00b6 4 : Ascending 5 : Descending Default \u00b6 6 : Unordered Tips The --directory-listing-order option depends on --directory-listing to be enabled. Use the query ?sort=NUMBER to customize the sorting. E.g https://localhost/?sort=5 (sort by Size in descending order) Example: static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true \\ # E.g Sorting file/dir names in descending order --directory-listing-order 1","title":"Directory Listing"},{"location":"features/directory-listing/#directory-listing","text":"SWS provides a directory listing feature to display content of directories. This feature is disabled by default and can be controlled by the boolean -z, --directory-listing option or the equivalent SERVER_DIRECTORY_LISTING env. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true And here an example of how the directory listing looks like.","title":"Directory Listing"},{"location":"features/directory-listing/#sorting","text":"Sorting by Name , Last modified and Size is enabled as clickable columns when directory listing is activated via the --directory-listing=true option. You can also use the sort query parameter to sort manually by certain attribute from URI. E.g https://localhost/?sort=5 .","title":"Sorting"},{"location":"features/directory-listing/#sorting-by-default","text":"Some times one wants to sort by certain attribute but by default . In that case default ascending or descending ordering of files/dirs by their attributes is provided by the numeric --directory-listing-order option or the equivalent SERVER_DIRECTORY_LISTING_ORDER env. To do so you have to pass a code sorting number . E.g --directory-listing-order=2 .","title":"Sorting by default"},{"location":"features/directory-listing/#code-numbers-for-sorting","text":"Below the possible number code values for sorting/ordering which are grouped by attribute.","title":"Code numbers for sorting"},{"location":"features/directory-listing/#name","text":"0 : Ascending 1 : Descending","title":"Name"},{"location":"features/directory-listing/#last-modified","text":"2 : Ascending 3 : Descending","title":"Last modified"},{"location":"features/directory-listing/#size","text":"4 : Ascending 5 : Descending","title":"Size"},{"location":"features/directory-listing/#default","text":"6 : Unordered Tips The --directory-listing-order option depends on --directory-listing to be enabled. Use the query ?sort=NUMBER to customize the sorting. E.g https://localhost/?sort=5 (sort by Size in descending order) Example: static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --directory-listing true \\ # E.g Sorting file/dir names in descending order --directory-listing-order 1","title":"Default"},{"location":"features/docker/","text":"Docker \u00b6 SWS has first-class Docker support. It provides a Scratch as well as the latest Alpine Linux Docker images. OS/Arch \u00b6 Only the following operating systems and architectures are supported. linux/386 linux/amd64 linux/arm/v6 linux/arm/v7 linux/arm64 View all images on Docker Hub . Run a container \u00b6 To give the server a quick try just run the following commands. Tips Server CLI arguments can be provided directly to the container or omitted as shown below. It can specify a Docker volume like -v $HOME/my-public-dir:/public in order to overwrite the default root directory. Run the scratch Docker image (just the binary) docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 -g info Or run the Alpine Docker image variant docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2-alpine -g info Dockerfile \u00b6 SWS Docker images can be extended as needed. Extending the scratch Docker image (just the binary) FROM joseluisq/static-web-server:2 # do stuff... Or the Alpine Docker image variant FROM joseluisq/static-web-server:2-alpine # do stuff... Docker Compose \u00b6 Below a Docker Compose example using the Traefik Proxy . version : \"3.3\" services : web : image : joseluisq/static-web-server:2 environment : # Note: those envs are customizable but also optional - SERVER_HOST=127.0.0.1 - SERVER_PORT=80 - SERVER_ROOT=/public volumes : - ./some-dir-path:/public labels : - \"traefik.enable=true\" - \"traefik.frontend.entryPoints=https\" - \"traefik.backend=localhost_dev\" - \"traefik.frontend.rule=Host:localhost.dev\" - \"traefik.port=80\" networks : - traefik_net networks : traefik_net : external : true","title":"Docker"},{"location":"features/docker/#docker","text":"SWS has first-class Docker support. It provides a Scratch as well as the latest Alpine Linux Docker images.","title":"Docker"},{"location":"features/docker/#osarch","text":"Only the following operating systems and architectures are supported. linux/386 linux/amd64 linux/arm/v6 linux/arm/v7 linux/arm64 View all images on Docker Hub .","title":"OS/Arch"},{"location":"features/docker/#run-a-container","text":"To give the server a quick try just run the following commands. Tips Server CLI arguments can be provided directly to the container or omitted as shown below. It can specify a Docker volume like -v $HOME/my-public-dir:/public in order to overwrite the default root directory. Run the scratch Docker image (just the binary) docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2 -g info Or run the Alpine Docker image variant docker run --rm -it -p 8787 :80 joseluisq/static-web-server:2-alpine -g info","title":"Run a container"},{"location":"features/docker/#dockerfile","text":"SWS Docker images can be extended as needed. Extending the scratch Docker image (just the binary) FROM joseluisq/static-web-server:2 # do stuff... Or the Alpine Docker image variant FROM joseluisq/static-web-server:2-alpine # do stuff...","title":"Dockerfile"},{"location":"features/docker/#docker-compose","text":"Below a Docker Compose example using the Traefik Proxy . version : \"3.3\" services : web : image : joseluisq/static-web-server:2 environment : # Note: those envs are customizable but also optional - SERVER_HOST=127.0.0.1 - SERVER_PORT=80 - SERVER_ROOT=/public volumes : - ./some-dir-path:/public labels : - \"traefik.enable=true\" - \"traefik.frontend.entryPoints=https\" - \"traefik.backend=localhost_dev\" - \"traefik.frontend.rule=Host:localhost.dev\" - \"traefik.port=80\" networks : - traefik_net networks : traefik_net : external : true","title":"Docker Compose"},{"location":"features/error-pages/","text":"Error Pages \u00b6 SWS provides custom HTML error pages for the HTTP 404 and 50x status errors. This feature is enabled by default and can be controlled either by the string --page404 ( SERVER_ERROR_PAGE_404 ) or the --page50x ( SERVER_ERROR_PAGE_50X ) arguments. Tip Either --page404 and --page50x have defaults (optional values) so they can be specified or omitted as required. Below an example of how to customize those HTML pages. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --page404 ./my-page-404.html \\ --page50x ./my-page-50x.html","title":"Error Pages"},{"location":"features/error-pages/#error-pages","text":"SWS provides custom HTML error pages for the HTTP 404 and 50x status errors. This feature is enabled by default and can be controlled either by the string --page404 ( SERVER_ERROR_PAGE_404 ) or the --page50x ( SERVER_ERROR_PAGE_50X ) arguments. Tip Either --page404 and --page50x have defaults (optional values) so they can be specified or omitted as required. Below an example of how to customize those HTML pages. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --page404 ./my-page-404.html \\ --page50x ./my-page-50x.html","title":"Error Pages"},{"location":"features/file-descriptor-socket-passing/","text":"File Descriptor Socket Passing \u00b6 SWS provides the ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications via systemd (Linux), launchd (Macos) or similar. Tip The Socket Activation model is basically an alternative to TCP port binding. Socket activation is supported by the -f, --fd option or the equivalent SERVER_LISTEN_FD env. If you are using inetd , its \" wait \" option should be used in conjunction with static-web-server's --fd 0 option. Systemd \u00b6 If you're using systemd on Linux, there is a fully working example in the SWS Git repository under the . /systemd directory. Testing \u00b6 Alternatively, the light-weight systemfd utility may be useful especially for testing purposes. For example using systemfd utility as follow: systemfd --no-pid -s http::8091 -- path/to/static-web-server --fd 0","title":"File Descriptor Socket Passing"},{"location":"features/file-descriptor-socket-passing/#file-descriptor-socket-passing","text":"SWS provides the ability to accept a socket listener as a file descriptor for use in sandboxing and on-demand applications via systemd (Linux), launchd (Macos) or similar. Tip The Socket Activation model is basically an alternative to TCP port binding. Socket activation is supported by the -f, --fd option or the equivalent SERVER_LISTEN_FD env. If you are using inetd , its \" wait \" option should be used in conjunction with static-web-server's --fd 0 option.","title":"File Descriptor Socket Passing"},{"location":"features/file-descriptor-socket-passing/#systemd","text":"If you're using systemd on Linux, there is a fully working example in the SWS Git repository under the . /systemd directory.","title":"Systemd"},{"location":"features/file-descriptor-socket-passing/#testing","text":"Alternatively, the light-weight systemfd utility may be useful especially for testing purposes. For example using systemfd utility as follow: systemfd --no-pid -s http::8091 -- path/to/static-web-server --fd 0","title":"Testing"},{"location":"features/graceful-shutdown/","text":"Graceful Shutdown \u00b6 SWS has the ability to terminate gracefully what is known as a graceful shutdown process. It means that when a SIGTERM termination signal is caught the server will stop receiving more requests immediately but in turn it will continue processing all existing requests until they are completed (or closed). Notes In BSD/Unix-like systems, SWS will start the graceful shutdown process when a SIGTERM , SIGINT or SIGQUIT termination signal is caught. In Windows systems otherwise, SWS will start the graceful shutdown process right after a CTRL + C . Which is used to abort the current task. Grace Period \u00b6 Sometimes one wants to control the graceful shutdown process for different reasons. For example during Kubernetes rollouts . In these situations, SWS allows to delay the graceful shutdown process right after a SIGTERM providing a grace period in seconds. The feature is disabled by default and can be controlled by the numeric -q, --grace-period option or its equivalent SERVER_GRACE_PERIOD env. Tip The maximum grace period value is 255 seconds (4.25 min). Default value is 0 (no delay). Here an example of delaying the graceful shutdown process by 10 seconds after a SIGTERM . static-web-server -p 8787 -d ./public/ -g trace --grace-period 10","title":"Graceful Shutdown"},{"location":"features/graceful-shutdown/#graceful-shutdown","text":"SWS has the ability to terminate gracefully what is known as a graceful shutdown process. It means that when a SIGTERM termination signal is caught the server will stop receiving more requests immediately but in turn it will continue processing all existing requests until they are completed (or closed). Notes In BSD/Unix-like systems, SWS will start the graceful shutdown process when a SIGTERM , SIGINT or SIGQUIT termination signal is caught. In Windows systems otherwise, SWS will start the graceful shutdown process right after a CTRL + C . Which is used to abort the current task.","title":"Graceful Shutdown"},{"location":"features/graceful-shutdown/#grace-period","text":"Sometimes one wants to control the graceful shutdown process for different reasons. For example during Kubernetes rollouts . In these situations, SWS allows to delay the graceful shutdown process right after a SIGTERM providing a grace period in seconds. The feature is disabled by default and can be controlled by the numeric -q, --grace-period option or its equivalent SERVER_GRACE_PERIOD env. Tip The maximum grace period value is 255 seconds (4.25 min). Default value is 0 (no delay). Here an example of delaying the graceful shutdown process by 10 seconds after a SIGTERM . static-web-server -p 8787 -d ./public/ -g trace --grace-period 10","title":"Grace Period"},{"location":"features/http1/","text":"HTTP/1 \u00b6 The HTTP/1 is the protocol by default and can be used specifying a host address via the -a, --host ( SERVER_HOST ) argument, the port of the host via -p, --port ( SERVER_PORT ) and the directory of the static files using the -d, --root ( SERVER_ROOT ) argument. Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. The server provides Termination Signal handling with Graceful Shutdown ability by default. Below an example of how to run the server using HTTP/1. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir","title":"HTTP/1"},{"location":"features/http1/#http1","text":"The HTTP/1 is the protocol by default and can be used specifying a host address via the -a, --host ( SERVER_HOST ) argument, the port of the host via -p, --port ( SERVER_PORT ) and the directory of the static files using the -d, --root ( SERVER_ROOT ) argument. Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. The server provides Termination Signal handling with Graceful Shutdown ability by default. Below an example of how to run the server using HTTP/1. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir","title":"HTTP/1"},{"location":"features/http2-tls/","text":"HTTP/2 and TLS \u00b6 SWS provides HTTP/2 protocol and TLS support. This feature is disabled by default and can be activated via the boolean -t, --http2 option as well as string arguments --http2-tls-cert (TLS certificate file path) and --http2-tls-key (private key file path). Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Don't forget to adjust the proper --port value for the HTTP/2 & TLS feature. When this feature is enabled ( --http2=true ) then the security headers are also enabled automatically. The server provides Termination Signal handling with Graceful Shutdown ability by default. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir \\ --http2 true \\ --http2-tls-cert ./my-tls.cert \\ --http2-tls-key ./my-tls.key","title":"HTTP/2 and TLS"},{"location":"features/http2-tls/#http2-and-tls","text":"SWS provides HTTP/2 protocol and TLS support. This feature is disabled by default and can be activated via the boolean -t, --http2 option as well as string arguments --http2-tls-cert (TLS certificate file path) and --http2-tls-key (private key file path). Tips Either --host , --port and --root have defaults (optional values) so they can be specified or omitted as required. Don't forget to adjust the proper --port value for the HTTP/2 & TLS feature. When this feature is enabled ( --http2=true ) then the security headers are also enabled automatically. The server provides Termination Signal handling with Graceful Shutdown ability by default. static-web-server \\ --host 127 .0.0.1 \\ --port 8787 \\ --root ./my-public-dir \\ --http2 true \\ --http2-tls-cert ./my-tls.cert \\ --http2-tls-key ./my-tls.key","title":"HTTP/2 and TLS"},{"location":"features/logging/","text":"Logging \u00b6 SWS provides logging support just specifying a log level in lower case. The values allowed are error , warn , info , debug and trace . The default value is error . This feature is enabled by default and can be controlled by the string -g, --log-level option or the equivalent SERVER_LOG_LEVEL env. Below an example of how to adjust the log level. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --log-level \"trace\"","title":"Logging"},{"location":"features/logging/#logging","text":"SWS provides logging support just specifying a log level in lower case. The values allowed are error , warn , info , debug and trace . The default value is error . This feature is enabled by default and can be controlled by the string -g, --log-level option or the equivalent SERVER_LOG_LEVEL env. Below an example of how to adjust the log level. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ --log-level \"trace\"","title":"Logging"},{"location":"features/security-headers/","text":"Security Headers \u00b6 SWS provides several security headers support. When the HTTP/2 feature is activated security headers is enabled automatically. This feature is disabled by default on HTTP/1 and can be controlled by the boolean --security-headers option or the equivalent SERVER_SECURITY_HEADERS env. Headers included \u00b6 The following headers are only included. Strict-Transport-Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age) X-Frame-Options: DENY X-XSS-Protection: 1; mode=block X-Content-Type-Options: nosniff Content-Security-Policy: frame-ancestors","title":"Security Headers"},{"location":"features/security-headers/#security-headers","text":"SWS provides several security headers support. When the HTTP/2 feature is activated security headers is enabled automatically. This feature is disabled by default on HTTP/1 and can be controlled by the boolean --security-headers option or the equivalent SERVER_SECURITY_HEADERS env.","title":"Security Headers"},{"location":"features/security-headers/#headers-included","text":"The following headers are only included. Strict-Transport-Security: max-age=63072000; includeSubDomains; preload\" (2 years max-age) X-Frame-Options: DENY X-XSS-Protection: 1; mode=block X-Content-Type-Options: nosniff Content-Security-Policy: frame-ancestors","title":"Headers included"},{"location":"features/worker-threads/","text":"Worker Threads Customization \u00b6 SWS allows to customize the number of worker threads powered by the Tokio runtime. This feature can be controlled by the numeric -n, --threads-multiplier option or the equivalent SERVER_THREADS_MULTIPLIER env. Worker threads multiplier \u00b6 The value of -n, --threads-multiplier works as multiplier digits in order to determine the number of worker threads used by the server. Basically multipling this input number by the number of system CPUs. The formula used is the following: worker threads = number of CPUs * n Where n is the input value of -n, --threads-multiplier . For example: If there are 4 available CPUs and the --threads-multiplier is 8 then the total of worker threads to use will be 32 . Info When the --threads-multiplier input value is 0 or 1 then one thread per core is used (default value). Warn Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. See Tokio worker_threads API for more details. Below an example of how to adjust the number of worker threads. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ # NOTE: \"8\" gets multiplied by the number of the available cores. --threads-multiplier 8","title":"Worker Threads Customization"},{"location":"features/worker-threads/#worker-threads-customization","text":"SWS allows to customize the number of worker threads powered by the Tokio runtime. This feature can be controlled by the numeric -n, --threads-multiplier option or the equivalent SERVER_THREADS_MULTIPLIER env.","title":"Worker Threads Customization"},{"location":"features/worker-threads/#worker-threads-multiplier","text":"The value of -n, --threads-multiplier works as multiplier digits in order to determine the number of worker threads used by the server. Basically multipling this input number by the number of system CPUs. The formula used is the following: worker threads = number of CPUs * n Where n is the input value of -n, --threads-multiplier . For example: If there are 4 available CPUs and the --threads-multiplier is 8 then the total of worker threads to use will be 32 . Info When the --threads-multiplier input value is 0 or 1 then one thread per core is used (default value). Warn Number of worker threads result should be a number between 1 and 32,768 though it is advised to keep this value on the smaller side. See Tokio worker_threads API for more details. Below an example of how to adjust the number of worker threads. static-web-server \\ --port 8787 \\ --root ./my-public-dir \\ # NOTE: \"8\" gets multiplied by the number of the available cores. --threads-multiplier 8","title":"Worker threads multiplier"}]}