name: devel
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '30 01 * * *'

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target
      TARGET_DIR: ./target
      # Emit backtraces on panics
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build:
        - pinned
        - stable
        - beta
        - linux-musl
        - linux-musl-arm64
        - linux-gnu
        - linux-gnu-arm64
        - linux-arm-gnueabihf
        - macos
        - macos-arm64
        # - windows-msvc
        # - windows-msvc-arm64
        include:
        - build: pinned
          os: ubuntu-20.04
          rust: 1.53.0
        - build: stable
          os: ubuntu-20.04
          rust: stable
        - build: beta
          os: ubuntu-20.04
          rust: beta
        - build: linux-musl
          os: ubuntu-20.04
          rust: nightly
          target: x86_64-unknown-linux-musl
        - build: linux-musl-arm64
          os: ubuntu-20.04
          rust: nightly
          target: aarch64-unknown-linux-musl
        - build: linux-gnu
          os: ubuntu-20.04
          rust: nightly
          target: x86_64-unknown-linux-gnu
        - build: linux-gnu-arm64
          os: ubuntu-20.04
          rust: nightly
          target: aarch64-unknown-linux-gnu
        - build: linux-arm-gnueabihf
          os: ubuntu-20.04
          rust: nightly
          target: arm-unknown-linux-gnueabihf
        - build: macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin
        - build: macos-arm64
          os: macos-latest
          rust: nightly
          target: aarch64-apple-darwin
        # - build: windows-msvc
        #   os: windows-2019
        #   rust: nightly
        #   target: x86_64-pc-windows-msvc
        # - build: windows-msvc-arm64
        #   os: windows-2019
        #   rust: nightly
        #   target: aarch64-pc-windows-msvc

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Use Cross
      if: matrix.target != ''
      run: |
        cargo install cross
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Run tests
      run: ${{ env.CARGO }} test --verbose

    - name: Build static-web-server and crates
      run: ${{ env.CARGO }} build --verbose

  checks:
    name: checks
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Check formatting
      run: |
        cargo fmt --all -- --check

    - name: Check via Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features -- -D warnings
